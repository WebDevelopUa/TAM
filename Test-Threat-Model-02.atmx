<?xml version="1.0" encoding="utf-8"?>
<ThreatModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Guid>b19f4e1a-0d8f-452a-a1d4-1caf391d9e38</Guid>
  <Name> Threat Model of BLOG</Name>
  <threatExists>true</threatExists>
  <Description>Приложение  предназначено для построения Модели угроз для тестового блога</Description>
  <MSAppsID>0</MSAppsID>
  <ApplicationName />
  <BusinessObjectivesGroup>
    <Guid>23d18558-5585-4134-8a23-d4c5eebeef2f</Guid>
    <Name>Business Objectives</Name>
    <BusinessObjectives>
      <BusinessObjective>
        <Guid>71696e79-21d3-4891-ae7e-3b8d98df28c2</Guid>
        <Name>Threat Model of BLOG</Name>
        <Description>Бизнес-задачи (Business Objectives), для решения которых предназначено приложение;

Приложение  предназначено для построения Модели угроз для тестового блога</Description>
      </BusinessObjective>
    </BusinessObjectives>
  </BusinessObjectivesGroup>
  <ApplicationDecompositionGroup>
    <Guid>45e590b4-179b-4268-8fb9-653dde03b5c2</Guid>
    <Name>Application Decomposition</Name>
    <RolesGroup>
      <Guid>86fef0c7-cf7d-4f93-9160-8b32279688e5</Guid>
      <Name>Roles</Name>
      <UserRolesGroup>
        <Guid>708b4142-6a36-44d3-9a4b-6e5baca8380f</Guid>
        <Name>User Roles</Name>
        <UserRoles>
          <UserRole>
            <Guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</Guid>
            <Name>ADMIN</Name>
            <Description>администратор

Пользовательские роли (User Roles)

Они определяют лиц, которые могут пользоваться разрабатываются ПО и используются для идентификации классов пользователей.

Каждая роль содержит два обязательных поля - название и описание, и два опциональных - механизм аутентификации и примерное количество личностей, исполняющих данную роль.

Пример списка ролей:
авторизованные пользователи,
неавторизованные пользователи,
администраторы.</Description>
            <AuthenticationMechanism />
            <Weight />
            <Identities />
          </UserRole>
          <UserRole>
            <Guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</Guid>
            <Name>AUTHORIZED_USERS</Name>
            <Description>авторизованные пользователи</Description>
            <AuthenticationMechanism />
            <Weight />
            <Identities />
          </UserRole>
          <UserRole>
            <Guid>b06fc230-058d-4647-8518-07fe1321b167</Guid>
            <Name>UNAUTHORIZED_USERS</Name>
            <Description>неавторизованные пользователи</Description>
            <AuthenticationMechanism />
            <Weight />
            <Identities />
          </UserRole>
        </UserRoles>
      </UserRolesGroup>
      <ServiceRolesGroup>
        <Guid>c0887d93-2b92-4fb0-aff3-64c847c4a49e</Guid>
        <Name>Service Roles</Name>
        <ServiceRoles>
          <ServiceRole>
            <Guid>2a513790-b0a1-4950-a119-6e5aaa11c091</Guid>
            <Name>Service Role 1</Name>
            <Description>Служебные роли - это набор некоторых уровней привилегий, ассоциированных с компонентами приложения. 
Служат, в первую очередь, для обобщенного описания нескольких компонентов. 
Примерами служебных ролей есть, скажем, веб-сервер или база данных.

Служебная роль состоит из следующих полей:
- название,
- описание,
- механизм аутентификации
- образцовое число сущностей.

Все поля, кроме названия, является опциональными. 

Поля «механизм аутентификации» и «приблизительное число сущностей» выбираются из ниспадающих списков, 
содержание которых также подвергается корректировке в настройках программы.</Description>
            <AuthenticationMechanism>Forms</AuthenticationMechanism>
            <Weight>6-10</Weight>
            <Identities />
          </ServiceRole>
        </ServiceRoles>
      </ServiceRolesGroup>
    </RolesGroup>
    <ComponentsGroup>
      <Guid>803bf4ae-94cc-44dd-976a-797c7f5455d3</Guid>
      <Name>Components</Name>
      <Components>
        <Component>
          <Guid>f61cf2c1-de3b-4524-87ec-7ea9a6ed1f94</Guid>
          <Name>Component 1 - Profile info</Name>
          <Description>Второй этап анализа рисков - это планирование архитектуры приложения.

Архитектуру приложения Microsoft определяет как совокупность:
- Компонентов приложения (Application Components)
- Служебных ролей (Service Roles)
- Внешних зависимостей (External Dependencies)
- Вызовов (Calls)

Компоненты программы - это «строительные кирпичи» проекта, определяющие основные объекты, из которых состоят приложение.

К примеру:
- база данных,
- веб-сервис,
- веб-сайт,
- тонкий клиент.

Для описания компонента приложения необходимо задать следующие поля:
- имя компонента,
- описание (необязательно),
- тип службы (необязательно),
- технология (необязательно),
- служебная роль данного компонента,
- пользовательские роли (взаимодействующие с данным компонентом),
- данные и возможные атаки.

Поля «тип службы» и «технология» выбираются из ниспадающих списков, которые можно редактировать в настройках программы. 
Поля «служебная роль», «пользовательские роли», и «данные» задаются, исходя из уже введенных ранее данных.
</Description>
          <IsDatastore>true</IsDatastore>
          <ApplicationDataGuids>
            <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
          </ApplicationDataGuids>
          <Objects />
          <RoleGuids>
            <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            <guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</guid>
          </RoleGuids>
          <RelevancyGuids>
            <guid>404b751c-da61-428e-97f7-bcb279126328</guid>
            <guid>548fa953-ef4f-4153-9ade-2605b11b7a3a</guid>
            <guid>57f1ccdf-d724-4c39-a521-3b6736e9f9d3</guid>
          </RelevancyGuids>
          <RunAsGuid>00000000-0000-0000-0000-000000000000</RunAsGuid>
          <Type>Website</Type>
          <Technology>Other</Technology>
        </Component>
        <Component>
          <Guid>c0699188-2b61-4002-9ab4-3dee13524112</Guid>
          <Name>Component 2 - Blog post</Name>
          <Description />
          <IsDatastore>true</IsDatastore>
          <ApplicationDataGuids>
            <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
          </ApplicationDataGuids>
          <Objects />
          <RoleGuids>
            <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            <guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</guid>
            <guid>b06fc230-058d-4647-8518-07fe1321b167</guid>
          </RoleGuids>
          <RelevancyGuids>
            <guid>404b751c-da61-428e-97f7-bcb279126328</guid>
            <guid>548fa953-ef4f-4153-9ade-2605b11b7a3a</guid>
            <guid>57f1ccdf-d724-4c39-a521-3b6736e9f9d3</guid>
            <guid>38eafd1a-25ec-4bb4-88c3-6e771e4b030f</guid>
          </RelevancyGuids>
          <RunAsGuid>00000000-0000-0000-0000-000000000000</RunAsGuid>
          <Type>Website</Type>
          <Technology>Other</Technology>
        </Component>
      </Components>
    </ComponentsGroup>
    <ApplicationDataGroup>
      <Guid>44187e41-a882-400b-b342-1d67682459c6</Guid>
      <Name>Application Data</Name>
      <ApplicationData>
        <ApplicationData>
          <Guid>b590225f-473b-49df-a4b4-f6651fcfed54</Guid>
          <Name>Profile Info</Name>
          <Description>В пункте «Данные» определяются типы информации, обрабатываемой данным приложением или является частью его внутренних процессов. 
Отдельные типы данных могут быть разбиты на конкретные элементы - для их более наглядного представления. 
Так, пользовательская учетная запись банковской системы представляют собой отдельную сущность, но может быть разбита на поля логин, пароль, ФИО и так далее.

Каждый элемент относится к типу Данные (Data), состоит из следующих полей:
название,
описание,
список подполей,
класс данных (неважно, важно, очень важно и т.д.),
матрица контроля доступа.

Последняя составляется на основании введенных ранее пользовательских ролей и определяет права доступа каждой роли к элементу данных. 
Для определения прав доступа используются четыре отдельных права (на создание, чтение, модификацию и удаление информации), 
которые могут быть разрешены или запрещены для каждой роли в отдельности. 
Кроме того, возможно задание условных прав - таких, которые действуют только при выполнении определенного условия.

Например, пользователь имеет право читать или модифицировать данные учетной записи, но только при условии,
 что он является владельцем этой записи. 
Администратор же имеет полные права для операций над учетными записями - без всяких условий.</Description>
          <DataElements>Login
Password
First Name
Last Name</DataElements>
          <DataClassification>High Business Impact</DataClassification>
          <ConditionalAccessControlsGroup>
            <Guid>dbf93e16-c873-4627-b6bb-56dfc8cbd728</Guid>
            <Name>Conditional Access Control Group</Name>
            <ConditionalAccessControls>
              <ConditionalAccessControl>
                <Guid>2a1b6a74-95de-4fe5-9f4d-431c8ede901b</Guid>
                <Name>Conditional Access Control1</Name>
                <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
                <Create>true</Create>
                <Read>true</Read>
                <Update>false</Update>
                <Delete>true</Delete>
                <ConditionalAccess>false</ConditionalAccess>
                <Condition />
              </ConditionalAccessControl>
              <ConditionalAccessControl>
                <Guid>0729fdae-a72c-4bfd-92cc-adcb491fabb4</Guid>
                <Name>Conditional Access Control2</Name>
                <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
                <Create>false</Create>
                <Read>true</Read>
                <Update>true</Update>
                <Delete>false</Delete>
                <ConditionalAccess>true</ConditionalAccess>
                <Condition>User is the owner of Data</Condition>
              </ConditionalAccessControl>
              <ConditionalAccessControl>
                <Guid>908cdcc4-4fab-4645-b7e6-55b4d3b87661</Guid>
                <Name>Conditional Access Control3</Name>
                <RoleGuid>b06fc230-058d-4647-8518-07fe1321b167</RoleGuid>
                <Create>false</Create>
                <Read>false</Read>
                <Update>false</Update>
                <Delete>false</Delete>
                <ConditionalAccess>false</ConditionalAccess>
                <Condition />
              </ConditionalAccessControl>
            </ConditionalAccessControls>
          </ConditionalAccessControlsGroup>
        </ApplicationData>
        <ApplicationData>
          <Guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</Guid>
          <Name>Blog Post</Name>
          <Description />
          <DataElements>Сообщения</DataElements>
          <DataClassification>Medium Business Impact</DataClassification>
          <ConditionalAccessControlsGroup>
            <Guid>852e5732-ef8d-473c-8f6f-fb0e90fc56a9</Guid>
            <Name>Conditional Access Control Group</Name>
            <ConditionalAccessControls>
              <ConditionalAccessControl>
                <Guid>b067655b-ac24-45e5-b767-31d9c0018d7c</Guid>
                <Name>Conditional Access Control1</Name>
                <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
                <Create>true</Create>
                <Read>true</Read>
                <Update>true</Update>
                <Delete>true</Delete>
                <ConditionalAccess>true</ConditionalAccess>
                <Condition>все сообщения</Condition>
              </ConditionalAccessControl>
              <ConditionalAccessControl>
                <Guid>23812640-f73b-434d-ba5f-bbb19eac1f00</Guid>
                <Name>Conditional Access Control2</Name>
                <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
                <Create>false</Create>
                <Read>false</Read>
                <Update>true</Update>
                <Delete>true</Delete>
                <ConditionalAccess>true</ConditionalAccess>
                <Condition>только свои сообщения / User is the owner of Data</Condition>
              </ConditionalAccessControl>
              <ConditionalAccessControl>
                <Guid>2da8d2ce-0d12-40f3-93c0-a76ab4b9dd14</Guid>
                <Name>Conditional Access Control3</Name>
                <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
                <Create>true</Create>
                <Read>true</Read>
                <Update>false</Update>
                <Delete>false</Delete>
                <ConditionalAccess>false</ConditionalAccess>
                <Condition />
              </ConditionalAccessControl>
              <ConditionalAccessControl>
                <Guid>da2c65cf-b871-41a1-a017-a7f1030e991f</Guid>
                <Name>Conditional Access Control4</Name>
                <RoleGuid>b06fc230-058d-4647-8518-07fe1321b167</RoleGuid>
                <Create>false</Create>
                <Read>true</Read>
                <Update>false</Update>
                <Delete>false</Delete>
                <ConditionalAccess>false</ConditionalAccess>
                <Condition />
              </ConditionalAccessControl>
            </ConditionalAccessControls>
          </ConditionalAccessControlsGroup>
        </ApplicationData>
      </ApplicationData>
    </ApplicationDataGroup>
    <ExternalDependenciesGroup>
      <Guid>1d3cb054-14c0-4300-9cbd-f940266af05d</Guid>
      <Name>External Dependencies Group</Name>
      <ExternalDependencies>
        <ExternalDependency>
          <Guid>4293199b-a7f1-47b6-a128-340451ec7e08</Guid>
          <Name>External Dependency</Name>
          <IsDatastore>false</IsDatastore>
          <MSAppsID />
          <Description>https://ru.wordpress.com/create-blog/

Внешние зависимости - это некоторые компоненты, с которыми приложение будет взаимодействовать, 
но на которые оно не может непосредственно влиять. 

Например, это может быть паспорт. NET, цифровые сертификаты сайтов и т.п.

Внешняя зависимость состоит всего из 3 полей:
- название,
- описание
- тип (выбираемый из списка).</Description>
          <Type>Website</Type>
        </ExternalDependency>
      </ExternalDependencies>
    </ExternalDependenciesGroup>
  </ApplicationDecompositionGroup>
  <ApplicationUseCasesGroup>
    <Guid>55eea20c-aaf3-4ae9-999f-3870cc26223a</Guid>
    <Name>Application Use Cases Group</Name>
    <ApplicationUseCases>
      <ApplicationUseCase>
        <Guid>3b30dcb5-bd8f-480f-8f22-5fbaa95c56ab</Guid>
        <Name>ADMIN create read delete Profile info</Name>
        <Description>ADMIN создает, просматривает, удаляет Профиль

Прецеденты (Use Case) - это описание конкретных сценариев, создаваемых для реализации заданных в предыдущем пункте разрешений. 
Так, копирование, обновление данных пользовательской учетной записи или создания новой учетной записи являются хорошими примерами прецедентов.

Каждый прецедент состоит из следующих полей:
- название,
- описание (опционально),
- бизнес-задачи, которые реализуются в рамках прецедента,
- роли, которые участвуют в прецеденте,
- данные, взаимодействие с которыми описывает прецедент и
- итог операции. Итог представляется в виде комбинации операций создания, чтения, модификации и удаления данных.

Фактически, прецедент описывает какое-то событие, которое может произойти при работе программы.</Description>
        <Create>true</Create>
        <Read>false</Read>
        <Update>false</Update>
        <Delete>false</Delete>
        <RoleGuids>
          <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
        </RoleGuids>
        <Calls>
          <Call>
            <Guid>08ae725f-477c-4d8b-b1d5-f7f0cb103e0d</Guid>
            <Name>ADMIN create Component 1 - Profile info</Name>
            <RolesGuids>
              <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            </RolesGuids>
            <CallerGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>f61cf2c1-de3b-4524-87ec-7ea9a6ed1f94</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>create</Action>
            <Description>ADMIN создает Профиль

Вызовы являются более глубокой детализацией прецедентов.

Каждый прецедент (Use Case) можно представить, как последовательность вызовов, 
каждый из которых - это одна операция передачи данных от одного компонента другому (или между компонентом и пользователем).

В общем случае, прецедент определяет, что должно произойти, а вызовы - как это будет происходить.

Для определения вызова необходимо указать:
- абонента (компонент, роль или внешняя зависимость), 
- компонент, к которому адресовано вызов (или от которого принимаются данные), 
- действие (прием или передача данных), 
- описание вызова и действия, производимые над данными и их частями.</Description>
            <DataEffects>
              <Guid>70a1ddc5-2ab8-4486-979a-cbfe7b8b9475</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>a2d10872-713c-4e85-89c2-e7abb57428b9</Guid>
                  <Name>Data Effect1</Name>
                  <Create>true</Create>
                  <Read>false</Read>
                  <Update>false</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>b590225f-473b-49df-a4b4-f6651fcfed54</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>a1146a44-a884-4447-ba00-adb3f2027d8c</Guid>
            <Name>ADMIN read Component 1 - Profile info</Name>
            <RolesGuids>
              <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            </RolesGuids>
            <CallerGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>f61cf2c1-de3b-4524-87ec-7ea9a6ed1f94</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>read</Action>
            <Description>ADMIN просматривает Профиль</Description>
            <DataEffects>
              <Guid>5f38c4fc-4e7e-4c14-84bc-977698314d61</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>a45317e9-956e-4505-8b08-03e27de2e643</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>true</Read>
                  <Update>false</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>b590225f-473b-49df-a4b4-f6651fcfed54</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>ab48523f-0df5-4a87-a214-82ba884edab8</Guid>
            <Name>ADMIN delete Component 1 - Profile info</Name>
            <RolesGuids>
              <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            </RolesGuids>
            <CallerGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>f61cf2c1-de3b-4524-87ec-7ea9a6ed1f94</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>delete</Action>
            <Description>ADMIN удаляет Профиль</Description>
            <DataEffects>
              <Guid>f5cb70e5-3e22-4950-8456-e56add4f3209</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>ce60b3af-d296-4b8f-83d7-138b9b51335a</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>false</Read>
                  <Update>false</Update>
                  <Delete>true</Delete>
                  <ApplicationDataGuid>b590225f-473b-49df-a4b4-f6651fcfed54</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataRecievedGuids>
          </Call>
        </Calls>
        <ApplicationDataGuid>b590225f-473b-49df-a4b4-f6651fcfed54</ApplicationDataGuid>
        <BusinessObjectiveGuids>
          <guid>71696e79-21d3-4891-ae7e-3b8d98df28c2</guid>
        </BusinessObjectiveGuids>
      </ApplicationUseCase>
      <ApplicationUseCase>
        <Guid>82ce606f-4ce6-4bfb-aaa1-1ad1b4e42620</Guid>
        <Name>ADMIN create read update delete Blog post</Name>
        <Description>ADMIN создает, читает, изменяет, удаляет ВСЕ сообщения</Description>
        <Create>true</Create>
        <Read>true</Read>
        <Update>true</Update>
        <Delete>true</Delete>
        <RoleGuids>
          <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
        </RoleGuids>
        <Calls>
          <Call>
            <Guid>c4aaabc3-9022-4410-b689-188aad500d2e</Guid>
            <Name>ADMIN create Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            </RolesGuids>
            <CallerGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>create</Action>
            <Description>ADMIN создает сообщение</Description>
            <DataEffects>
              <Guid>4dae0258-ca23-4edb-843a-f7794020fae3</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>5126ef71-50d1-4a65-b820-4ec3b23633e1</Guid>
                  <Name>Data Effect1</Name>
                  <Create>true</Create>
                  <Read>false</Read>
                  <Update>false</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>243fcfb8-7258-4d2c-a8d5-24a6109fdc6e</Guid>
            <Name>ADMIN read Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            </RolesGuids>
            <CallerGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>read</Action>
            <Description>ADMIN читает сообщение</Description>
            <DataEffects>
              <Guid>74988803-7f69-4f27-a9c8-4213523968a2</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>f5370907-cc1a-4019-83dc-c24eda9a904b</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>true</Read>
                  <Update>false</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>d34ee77d-587b-4657-84e8-0baf4c4ab1c4</Guid>
            <Name>ADMIN update Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            </RolesGuids>
            <CallerGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>update</Action>
            <Description>ADMIN изменяет сообщение</Description>
            <DataEffects>
              <Guid>73dcc1a9-6c42-4c22-8a90-bc14f8a6ed8b</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>5bf52cb6-4f3f-4fa8-b20f-dcffede058c2</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>false</Read>
                  <Update>true</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>b5839925-a51b-414d-b0a8-eec706afaf16</Guid>
            <Name>ADMIN delete Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
            </RolesGuids>
            <CallerGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>delete</Action>
            <Description>ADMIN удаляет сообщение</Description>
            <DataEffects>
              <Guid>4b24eb62-1efa-4f2c-94f6-377d2722c29f</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>e04fd1c1-bab3-4259-a0d4-e68ac61259a9</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>false</Read>
                  <Update>false</Update>
                  <Delete>true</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
        </Calls>
        <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
        <BusinessObjectiveGuids>
          <guid>71696e79-21d3-4891-ae7e-3b8d98df28c2</guid>
        </BusinessObjectiveGuids>
      </ApplicationUseCase>
      <ApplicationUseCase>
        <Guid>40c89be3-8e86-416e-ad95-e07080f17fdf</Guid>
        <Name>AUTHORIZED read update Profile info</Name>
        <Description>Авторизованный пользователь просматривает и редактирует Профиль</Description>
        <Create>false</Create>
        <Read>true</Read>
        <Update>false</Update>
        <Delete>false</Delete>
        <RoleGuids>
          <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
        </RoleGuids>
        <Calls>
          <Call>
            <Guid>509def30-cd5b-4f8f-8ad1-063a916b9df2</Guid>
            <Name>AUTHORIZED_USERS read Component 1 - Profile info</Name>
            <RolesGuids>
              <guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</guid>
            </RolesGuids>
            <CallerGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>f61cf2c1-de3b-4524-87ec-7ea9a6ed1f94</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>read</Action>
            <Description>Авторизованный пользователь просматривает Профиль</Description>
            <DataEffects>
              <Guid>9110ea61-d809-4a2e-b438-a650a8dfee00</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>b1ad087c-1f22-419d-b2a2-9a745e8f0830</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>true</Read>
                  <Update>false</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>b590225f-473b-49df-a4b4-f6651fcfed54</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>b2e65ecd-23ae-463b-8f0d-30b360f48886</Guid>
            <Name>AUTHORIZED_USERS update Component 1 - Profile info</Name>
            <RolesGuids>
              <guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</guid>
            </RolesGuids>
            <CallerGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>f61cf2c1-de3b-4524-87ec-7ea9a6ed1f94</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>update</Action>
            <Description>Авторизованный пользователь редактирует Профиль</Description>
            <DataEffects>
              <Guid>807afc5e-0d95-493a-b96a-bffda232d458</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>f5a932c5-8119-498b-9cde-48cfbdd59ae4</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>false</Read>
                  <Update>true</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>b590225f-473b-49df-a4b4-f6651fcfed54</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>b590225f-473b-49df-a4b4-f6651fcfed54</guid>
            </DataRecievedGuids>
          </Call>
        </Calls>
        <ApplicationDataGuid>b590225f-473b-49df-a4b4-f6651fcfed54</ApplicationDataGuid>
        <BusinessObjectiveGuids>
          <guid>71696e79-21d3-4891-ae7e-3b8d98df28c2</guid>
        </BusinessObjectiveGuids>
      </ApplicationUseCase>
      <ApplicationUseCase>
        <Guid>d4141627-2e74-49c8-9b85-1ba49dc87936</Guid>
        <Name>AUTHORIZED create read update delete Blog post</Name>
        <Description>Авторизованный пользователь создает,  просматривает,  редактирует и удаляет СВОЁ сообщение</Description>
        <Create>false</Create>
        <Read>false</Read>
        <Update>true</Update>
        <Delete>false</Delete>
        <RoleGuids>
          <guid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</guid>
        </RoleGuids>
        <Calls>
          <Call>
            <Guid>0c574af6-824f-41c0-8a97-9da3749b98b4</Guid>
            <Name>AUTHORIZED_USERS create Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</guid>
            </RolesGuids>
            <CallerGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>create</Action>
            <Description>Авторизованный пользователь создает сообщение</Description>
            <DataEffects>
              <Guid>aa0f400f-3462-449f-8ad3-ef68103a9d95</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>1bc1c8bf-a19e-4a6f-b9a5-e7560eaad8a2</Guid>
                  <Name>Data Effect1</Name>
                  <Create>true</Create>
                  <Read>false</Read>
                  <Update>false</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>7b590b6e-c81d-4039-bd1b-1939967e0db5</Guid>
            <Name>AUTHORIZED_USERS read Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</guid>
            </RolesGuids>
            <CallerGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>read</Action>
            <Description>Авторизованный пользователь просматривает сообщение</Description>
            <DataEffects>
              <Guid>679d6e21-2b2d-4a90-9feb-62e7094779db</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>68637b76-53ea-4135-b2f1-cc2efb32eb39</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>true</Read>
                  <Update>false</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>86af7fb9-32a5-4333-8444-ed91b90e2c88</Guid>
            <Name>AUTHORIZED_USERS update Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</guid>
            </RolesGuids>
            <CallerGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>update</Action>
            <Description>Авторизованный пользователь редактирует СВОЁ сообщение</Description>
            <DataEffects>
              <Guid>21967ec2-0b4a-43e4-8dc3-f9974f4eeeeb</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>56676aa1-04d1-42db-b2cf-21813950e688</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>false</Read>
                  <Update>true</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
          <Call>
            <Guid>8a5b844b-cc30-4b6e-972f-483551ef20b9</Guid>
            <Name>AUTHORIZED_USERS delete Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>05df594e-9e6a-496b-a211-784c5b7a1bd2</guid>
            </RolesGuids>
            <CallerGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>delete</Action>
            <Description>Авторизованный пользователь удаляет СВОЁ сообщение</Description>
            <DataEffects>
              <Guid>ac464b00-b250-4ac4-b50b-a6b3a0112fdd</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>26f0fbd6-2fc1-4ad6-813b-d0b1feaf1131</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>false</Read>
                  <Update>false</Update>
                  <Delete>true</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
        </Calls>
        <ApplicationDataGuid>b590225f-473b-49df-a4b4-f6651fcfed54</ApplicationDataGuid>
        <BusinessObjectiveGuids>
          <guid>71696e79-21d3-4891-ae7e-3b8d98df28c2</guid>
        </BusinessObjectiveGuids>
      </ApplicationUseCase>
      <ApplicationUseCase>
        <Guid>4412b66d-268d-49e2-8149-e41969141ba6</Guid>
        <Name>UNAUTHORIZED read Blog post</Name>
        <Description>Неавторизованный  просматривает  сообщение</Description>
        <Create>false</Create>
        <Read>false</Read>
        <Update>false</Update>
        <Delete>false</Delete>
        <RoleGuids />
        <Calls>
          <Call>
            <Guid>dce948d4-2ed8-4799-b544-a62ad7a8f639</Guid>
            <Name>UNAUTHORIZED_USERS read Component 2 - Blog post</Name>
            <RolesGuids>
              <guid>b06fc230-058d-4647-8518-07fe1321b167</guid>
            </RolesGuids>
            <CallerGuid>b06fc230-058d-4647-8518-07fe1321b167</CallerGuid>
            <ImpersonationGuid>00000000-0000-0000-0000-000000000000</ImpersonationGuid>
            <ComponentGuid>c0699188-2b61-4002-9ab4-3dee13524112</ComponentGuid>
            <Authorization>Delegate Caller</Authorization>
            <Action>read</Action>
            <Description>Неавторизованный  просматривает  сообщение</Description>
            <DataEffects>
              <Guid>1f6c06d6-53c8-4d49-9f94-6fbfd5e80b10</Guid>
              <Name>Data Effects</Name>
              <DataEffects>
                <DataEffect>
                  <Guid>721c7d87-3289-450f-b8d5-659a061d04a8</Guid>
                  <Name>Data Effect1</Name>
                  <Create>false</Create>
                  <Read>true</Read>
                  <Update>false</Update>
                  <Delete>false</Delete>
                  <ApplicationDataGuid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</ApplicationDataGuid>
                </DataEffect>
              </DataEffects>
            </DataEffects>
            <DataSentGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataSentGuids>
            <DataRecievedGuids>
              <guid>1b8d3213-5699-4772-b6a0-6a83ac2dd3a9</guid>
            </DataRecievedGuids>
          </Call>
        </Calls>
        <ApplicationDataGuid>00000000-0000-0000-0000-000000000000</ApplicationDataGuid>
        <BusinessObjectiveGuids />
      </ApplicationUseCase>
    </ApplicationUseCases>
  </ApplicationUseCasesGroup>
  <AttackPatternLibrary>
    <Guid>673869a1-ca4d-4d42-a389-6b9de2746494</Guid>
    <Name>Attack Library</Name>
    <Attacks>
      <Guid>39fc973d-f60c-4550-8a15-c4aabd93127c</Guid>
      <Name>Attacks</Name>
      <Attacks>
        <Attack>
          <Guid>9fd9aa32-287c-4eef-8325-5ba97cf0d901</Guid>
          <Name>Buffer Overflow</Name>
          <Description>A buffer overrun occurs when a buffer declared on the stack is overwritten by copying data larger than the buffer. Variables declared on the stack are located next to the return address for the function’s caller. The usual culprit is unchecked user input passed to a function such as strcpy, and the result is that the return address for the function gets overwritten by an address chosen by the attacker. In a normal attack, the attacker can get a program with a buffer overrun to do something he considers useful, such as binding a command shell to the port of their choice.

More information: &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dncode/html/secure03102004.asp&gt;</Description>
          <HowTo>The most common way to detect potential Buffer Overflow attacks are listed below:

1.	Identify all entry points of the application that collect user input via text boxes, command line parameters etc.
2.	Provide exceedingly long input via all entry points [For e.g AAAAAAAAA….] and submit the request.
3.	If the long input that you provided results in buffer overflow attack, you would receive an exception message in the below format.

 

Note: If you don’t have a development environment on your system, this information will be logged in the Dr. Watson logs.
</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>3267153d-a278-4888-8536-8039d0952d36</Guid>
              <Name>Use of unsafe functions (in unmanaged code)</Name>
              <Description>The standard string manipulation functions (unsafe functions) that are supplied by C/C++ language runtime libraries do not prevent writing beyond the end of buffers. This vulnerability does exist when application uses unsafe functions (strcat, strcpy, sprintf, and so on) in the code. 

</Description>
              <HowTo>1.	Identify the code in the application which uses inherently unsafe functions (strcat, strcpy, sprintf, and so on). 

More information: &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/strings/usingstrsafefunctions.asp&gt; 
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>7ae5fc8e-7776-4711-ba07-aa6b2a8c905c</Guid>
                  <Name>Use safe functions such as strncpy, strncat instead of strcpy, strcat </Name>
                  <Description>You can eliminate many potential buffer overruns by using the kernel-mode safe string functions instead of the standard string manipulation functions. The kernel-mode safe string functions are prototyped in Ntstrsafe.h; this header file and the associated library, Ntstrsafe.lib, are provided in the Windows DDK for Windows XP SP1 and later versions of Windows. (A corresponding set of safe string functions for user-mode applications is prototyped in Strsafe.h. For more information about these functions, see the Platform SDK.)

The kernel-mode safe string functions take the size of the destination buffer as an input parameter, to ensure that the function does not write past the end of the buffer. These functions also null-terminate all output strings, to avoid problems caused by a missing null terminator. To make checking return values simpler and more consistent, all safe string functions return an NTSTATUS value with only one possible success code, STATUS_SUCCESS.

Each kernel-mode safe string function is available in both byte-counted and character-counted versions (RtlStringCbXxx and RtlStringCchXxx) as well as versions for double-byte Unicode characters and single-byte ANSI characters (RtlStringXxxW and RtlStringXxxA), to make handling mixed Unicode and ANSI strings easier. Most functions are also available in an extended version (RtlStringXxxEx) that provides advanced functionality, such as filling the destination buffer after the null terminator.

More information:
·	&lt;http://www.microsoft.com/whdc/driver/tips/SafeString.mspx&gt;
·	&lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/kmarch/hh/kmarch/Other_2fe131c8-834b-4fff-a1c8-3803eeb9324c.xml.asp&gt; 

</Description>
                  <HowTo>1.	Replace all the unsafe functions implementation with safe functions in the application code. 

Example:
The buffer overrun caused by Unicode and ANSI buffer size mismatches is somewhat common on Windows platforms. It occurs if you mix up the number of elements with the size in bytes of a Unicode buffer. There are two reasons it’s rather widespread: Windows NT and later support ANSI and Unicode strings, and most Unicode functions deal with buffer sizes in wide characters, not byte sizes.
The most commonly used function that is vulnerable to this kind of bug is MultiByteToWideChar. Take a look at the following code:
BOOL GetName(char *szName)
{
    WCHAR wszUserName[256];
 
    // Convert ANSI name to Unicode.
    MultiByteToWideChar(CP_ACP, 0, 
                        szName,
                        -1, 
                        wszUserName,   
                        sizeof(wszUserName));
    // Snip
    
}
The problem is the last argument of MultiByteToWideChar. The documentation for this argument states: “Specifies the size, in wide characters, of the buffer pointed to by the lpWideCharStr parameter.” The value passed into this call is sizeof(wszUserName), which is 256, right? No, it’s not. wszUserName is a Unicode string; it’s 256 wide characters. A wide character is two bytes, so sizeof(wszUserName) is actually 512 bytes. Hence, the function thinks the buffer is 512 wide characters in size. Because wszUserName is on the stack, we have a potential exploitable buffer overrun.
Here’s the correct way to write this function
MultiByteToWideChar(CP_ACP, 0, 
                        szName,
                        -1, 
                        wszUserName,   
                        sizeof(wszUserName) / sizeof(wszUserName[0]));
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>6d915115-703d-40ea-b537-fe6e41a91198</Guid>
              <Name>Using safe functions incorrectly </Name>
              <Description>Programmers who attempt to use relatively safe functions such as strncpy do not necessarily make their programs much more secure from overflows. Errors in counting the size of the buffer can occur usually resulting in a single byte overflow known as an off-by-one.

Consider the following program where the programmer has mistakenly utilized “less than or equal to” rather than simply “less than.”

#include &lt;stdio.h&gt;

int i;

void vuln(char *foobar)
{
char buffer [512];
for (i=0;i&lt;=512;i++)
buffer[i]=foobar[i];
}
void main(int argc, char *argv[])
{
if (argc==2)
vuln(argv[1]);
}
 
In this case, the stack will appear as:

 

While one is unable to overwrite EIP because the overflow is only one-byte, one can overwrite the least-significant byte of EBP because it is a little-endian system. For example, if the overflow byte is set to 0x00, the Old EBP will be set to 0x0012FF00.

 
 Depending on the code, the fake EBP may be used in a variety of manners. Often, a mov esp, ebp will follow causing the stack frame pointer to now be in the location of buffer. Thus, buffer can be constructed to hold local variables, an EBP, and more importantly an EIP that redirects to the malicious code. The local variables of the fake stack frame will be processed and the program will continue execution at the fake return EIP, which has been set to injected code located in the stack. Thus, a single byte overflow may allow arbitrary code execution.
 
</Description>
              <HowTo>1.	Identify the code that makes use of safe functions. 
2.	Check the size of the data before copying it to the destination buffer. If not, this can lead to buffer overflow exploitation.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>b287c964-8560-4add-90c3-d86f1b08437c</Guid>
                  <Name>Validation on input should be performed on the input</Name>
                  <Description>Many functions, messages, and macros use strings in their parameters. However, often the strings are not checked for null-termination or for length. A related concern is miscalculating the length of a string or buffer. In either case, this can lead to buffer overflow or data truncation, which can affect your application adversely. </Description>
                  <HowTo>To handle strings in a safe manner, you should do the following:
Ø	Check strings for null-termination or for the proper length, as appropriate. 
Ø	Take special care to determine the length of a string or buffer, especially when it is a TCHAR. 
Ø	If you create a string or use a string that was used previously, initialize it to zero or insert a null-terminator, as appropriate. 
In addition, consider using the StrSafe functions when dealing with strings. These functions are designed to handle strings safely.

Users who enter incorrect data can disrupt your application, whether or not they intend to do so. Thus, the cardinal rule is that all input must be validated.

Of primary concern is string data, which is discussed in String Considerations. However, all types of input should be validated before being used by your application. Another concern is when data is validated at one point but changes before it is used, for example, when receiving messages that give the length of text. So, if there is a chance the data might change, you should check the data just before you use it 

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>7591314b-d3f0-48d7-aec4-cb7b63e51fff</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>43205c65-a978-46f7-bd0e-dd25926b5950</Guid>
          <Name>Canonicalization</Name>
          <Description>Different forms of input that resolve to the same standard name (the canonical name), is referred to as canonicalization. Code is particularly susceptible to canonicalization issues if it makes any decisions based on the name of a resource that is passed to the program as input. Files, paths, and URLs are resource types that are vulnerable to canonicalization because in each case there are many different ways to represent the same name.

More information: &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/THCMCh04.asp&gt;
</Description>
          <HowTo>The most common way to detect the potential of a Canonicalization attack:

1.	Identify entry points that collect user input for file paths, url’s in text boxes, query string parameters, etc.
2.	Try to enter the following strings which could represent the same file and submit the request.(valid file name is somefile.dat)
      c:\temp\subdir\..\somefile.dat
      c:\  temp\   somefile.dat
        ..\somefile.dat
      c%3A%5Ctemp%5Csubdir%5C%2E%2E%5Csomefile.dat
3.	If the application accepts the above mentioned different forms of file names application is vulnerable to Canonicalization.
4.	Please note that the exception/error messages/control flow/program flow may be logged therefore simply checking the UI will not be sufficient.

</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>1fbc13ae-74fd-4d60-8438-71e43279f43f</Guid>
              <Name>Allowing an untrusted source to specify the name of a file resource</Name>
              <Description>The applications that accept input file names from the user. For  example:

strTheFile = Request.QueryString["filename"].ToString();
File.Delete(strTheFile);

</Description>
              <HowTo>  Identify code in the application which accepts\builds file names, url paths dynamically.

</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>d79e7276-2036-4b5f-ab8a-6f7edb387a30</Guid>
                  <Name>Only accept primitive typed identified (e.g., integers) which are mapped to filenames</Name>
                  <Description>Accept Filepath/URL as primitive types (GUID, Integers) rather than accepting as files names.

</Description>
                  <HowTo>The following C# code sample will demonstrate how to get a file name from the user supplied id’s. This prevents user from entering invalid characters and malformed URLs. Therefore, you can avoid common canonicalization issues. Note the below code snippet is a generic example where in you can securely consume integer as an input from the user &amp; map it to the filename. For more scalable solution, this mapping can be done in the backend database.

Private void GetMap( string file )
	{
			int id;
			try
		{
				id = int.Parse(file);
			}
			catch (Exception ex)
			{
				return;
			}

			file = this.idToFilename(id);
			if (file == "")
				return;

			string path = Server.MapPath("");
			string filename = path+"\\"+file;
			FileStream fs = new FileStream( filename, FileMode.Open, 
				FileAccess.Read);
			byte[] MyData = new byte[fs.Length];
			fs.Read(MyData, 0, (int)fs.Length);
			fs.Close();
			fs = null;
			Response.Buffer = true;
			Response.BinaryWrite(MyData);
		}

		private string idToFilename(int id)
		{
			switch(id)
			{
				case 1:
					return "seattle.gif";
				case 2:
					return "bellevue.gif";
				case 3:
					return "kirkland.gif";
				default:
					return "";
			}
		}
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>0dd62a38-b3bb-45c8-9009-3bcbf07d80d1</Guid>
                  <Name>Validate supplied filename with the filename of the resolved absolute path</Name>
                  <Description>When a Filepath/URL is received by a Web server, the server maps the request value to a file system path that determines the control decisions. The canonicalization routine that is used to map the request value must correctly parse the URL to avoid serving or processing unexpected content.
</Description>
                  <HowTo>The following C# code sample demonstrate how to add an Application_BeginRequest event handler to a Global.asax file. This event handler helps prevent invalid characters and malformed URLs by performing path verifications. Therefore, you can avoid canonicalization issues.

&lt;script language="C#" runat="server"&gt;
void Application_BeginRequest(object source, EventArgs e) {
    if (Request.Path.IndexOf('\\') &gt;= 0 ||
        System.IO.Path.GetFullPath(Request.PhysicalPath) != Request.PhysicalPath) {
        throw new HttpException(404, "not found");
    }
}
&lt;/script&gt;
GO
	More information: 
a.	&lt;http://support.microsoft.com/kb/887459/#XSLTH4139121121120121120120&gt;
b.	&lt;http://support.microsoft.com/kb/887289&gt;   : HTTP module to check for canonicalization issues with ASP.NET.
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>5072626b-5643-4b84-973c-9d6180d06c21</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>f6aa925f-2482-46a5-8bd6-5ab05a0e20a2</Guid>
          <Name>Cross-Site Scripting (XSS)</Name>
          <Description>Cross-site script (XSS) attacks can occur whenever a users input is echoed back to the browser without adequate validation, sanitization or encoding, enabling an attacker to supply input which the victim's browser interprets as client-side script originating from the vulnerable application. 
The XSS attacks could be categorized as persistent or non-persistent.
In the "direct" or "persistent" scenario, the attacker posts malicious data to the web server which is stored and later replayed to the victim. In the "indirect" or "non-persistent" scenario, the attacker supplies the victim with a URL or HTML form which contains malicious script.  The victim's browser passes the malicious script to the vulnerable site, which replays it to the victim's browser. In both cases, the script is executed in the trust context of the vulnerable site.  
Typical XSS exploits target the victim's cookies, transmitting them to the attacker so that the attacker can impersonate the victim on the vulnerable site.  In general, XSS exploits enable attackers to take arbitrary actions on the vulnerable site on the victim's behalf.  In the worst-case scenario, an attacker can use XSS to seize remote control of the victim's computer</Description>
          <HowTo>How-to-test-for:
The most common way to detect the potential of a XSS attack:

1.	Identify entry points that collect user input such as Form inputs [e.g text boxes], query string parameters, etc.
2.	Check if the user input is echoed back to the browser.
3.	Insert “&lt;script&gt;alert(‘XSS’);&lt;/script&gt;” as an input and submit the request.
4.	If this pops up an alert box saying “XSS” attack was successful. 
5.	Depending on the context of the output this payload might need more tweaking. Do a View Source to find where &amp; how the input was echoed back.
6.	Presence of the input without encoding in the source indicates XSS vulnerability.

</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>c7f36054-43fd-4e0a-b3bb-ee3753e20c13</Guid>
              <Name>Ineffective or lacking encoding</Name>
              <Description>The application echoes back the user input without encoding. As example:

&lt;% 
Response.Write(Request.QueryString["userinput"]); 
%&gt;

The application echoes back the user input without effective encoding. In the example shown below Server.HTMLEncode will not help as it encodes only the four characters; &lt; &gt; &amp; and “, and the attacker does not need any of these in JavaScript context:

&lt;script language=”javascript”&gt;
var id = &lt;%=Server.HTMLEncode(Request.QueryString["userinput"]) %&gt;;
&lt;/script&gt;</Description>
              <HowTo>1.	Identify code in the application where user input is echoed back to the user without effective encoding.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</Guid>
                  <Name>Perform context sensitive encoding</Name>
                  <Description>Proper context sensitive encoding of data renders the malicious characters ineffective needed to open and work within a scripting context.
</Description>
                  <HowTo>
                  1.	Use AntiXSS (http://msdn2.microsoft.com/en-us/security/aa973814.aspx) or any other encoding library to encode the input depending on the context it is output to.
                  .NET Framework (C#) example for different contexts:
                  a.	HTML body

                  &lt;%
                  Response.Write( AntiXss.HtmlEncode(Request.QueryString["userinput"]) );
                  %&gt;

b.	HTML attribute

&lt;html&gt;
&lt;img src=”/users/user.gif” id=&lt;% =AntiXss.HtmlAttributeEncode(Request.Form["userinput"]) %&gt;&gt;
                  &lt;/html&gt;

                  c.	Javascript block

                  &lt;script language="javascript"&gt;
                  var id = &lt;%=AntiXss.JavaScriptEncode(Request.Querystring["userinput"]) %&gt;;
&lt;/script&gt;
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>1a1ef139-6af6-4769-95a8-4244d6e1eb98</Guid>
              <Name>Ineffective or lacking input validation</Name>
              <Description>User input is not validated on the server-side or the validation is inappropriate. Input validation can follow the principle of exclusions or the principle of inclusions. The principle of exclusions defines an exclusion list of characters that are unacceptable whereas under the principle of inclusions one defines an inclusion list of acceptable characters. The appropriate validation is done by following the principle of inclusions.
</Description>
              <HowTo>1.	Identify user input that is being echoed to the browser without being validated. Example:
&lt;% Response.Write(Request.QueryString["userinput"]);  %&gt;
2.	Identify user input that is only being validated on the client side (for example, using JavaScript).
3.	Identify user input that is being validated against an inclusion list of unacceptable characters. For example an application that rejects the “&lt;script&gt;” tag as a validation guard for potential XSS attack.
4.	Identify user input that is being saved to the database without being validated. 
Note: This could result in persistent XSS attack in case an application assumes the database to have good data and does not encode it before outputting to the client.</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>987228bc-e382-4083-8371-3623cabb2015</Guid>
                  <Name>Untrusted input should be validated against an inclusion list</Name>
                  <Description>For each input, define what is acceptable through either a regular expression, a list of acceptable characters, domain constrains or type casting and enforce this validation on the server side.
</Description>
                  <HowTo>This can be implemented by one or more means. For example, one can:
1.	Build a regular expression that defines an inclusions list of acceptable character sequences. For example: Name must contain between 1 and 40 alphanumeric characters and (optionally) special characters such as apostrophes for names such as O'Dell
if (Regex.IsMatch(Request.Form["name"],@"^[\p{L}\p{Zs}\p{Lu}\p{Ll}\']{1,40}$"))
{
    // validation passed
}
else
{
    // validation failed
}
2.	If the input is of a primitive type, one can cast it. For example:
int x = int.Parse(Request.Form(“param”))
3.	If the input can only be from a small (but varying) domain, one can define conditional statements to validate them. For example:
if ( (Request.Form(“favColor”) == “RED”) || (Request.Form(“favColor”) == “ORANGE”) )
{
	// validation passed
}
else
{
	// validation failed
}
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>404b751c-da61-428e-97f7-bcb279126328</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>9b3ee179-2671-4a19-be1f-d80b13db845b</Guid>
          <Name>Cryptanalysis Attacks </Name>
          <Description>Cryptanalysis is the science of cracking codes, decoding secrets, violating authentication schemes and breaking cryptographic protocols. It is also the science devoted to finding and correcting weaknesses in cryptographic algorithms. It is understood within the field of Cryptology that an algorithm should not rely on its secrecy. An algorithm should always be made available for public scrutiny. It is this scrutiny that will make it a well trusted algorithm. Inevitably, vulnerability in the algorithm will be exploited.
</Description>
          <HowTo>The most common way to detect the potential of a Cryptanalysis attack:
1.	Check for the algorithm which is used for encryption in the application
2.	Check  for any custom algorithms are being used in the application
3.	Check the bit length of Keys that are used for encryption
4.	Check for how the Keys are secured and maintained
</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>80409116-8e2c-420d-8f5b-08073e5e3ca2</Guid>
              <Name>Custom implementation of algorithm</Name>
              <Description>Custom algorithms are not good to use for encryption/hashing, because these algorithms may be easily predictable and may be prone to compromise. Custom algorithm is an algorithm which is not standardized and published.
</Description>
              <HowTo>1.	Check whether custom encryption algorithms are used by the application/ components.


</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>3887d6c9-b907-4f1b-adbd-e6e4fb11eb43</Guid>
                  <Name>Use well-known implementations of well-known cryptographic algorithms</Name>
                  <Description>With the help of .NET Cryptography namespace classes we can implement a safe way of encryption/decryption. (like 3DES, AES etc.,)

</Description>
                  <HowTo>1.	Use any Security.Cryptography name space class for encryption

Sample Code Snippet for 3DES algorithm:
TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
CryptoStream encStream = new CryptoStream(fout,tdes.CreateEncryptor(tdesKey, tdesIV), CryptoStreamMode.Write);
Console.WriteLine("Encrypting...");
… etc.,
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>14c94e4b-ba62-4b62-9e54-f809d6a0d5f2</Guid>
              <Name>Use of weak keys (e.g., key length)</Name>
              <Description>In cryptography, a weak key is a key which can be compromised with less effort &amp; time through brute force attack. The strength of Cryptographic algorithm depends on the key length. Hence the key length should be large enough as per the standards provided.  Usage of weak keys may compromise the secrets that are encrypted. 
</Description>
              <HowTo>1. Check for the key size (example: whether the key size is 64bit/128bit etc.,)

Sample Code Snippet:
DESCryptoServiceProvider key = new DESCryptoServiceProvider(); // default key size uses 64 bit
// Encrypt a string to a byte array.
byte[] buffer = Encrypt("This is some plaintext!", key);
// Decrypt the byte array back to a string.
string plaintext =  Decrypt(buffer, key);
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>347db3b1-d3d4-4296-87e2-b2c1cefba2f6</Guid>
                  <Name>Use cryptographically generated random keys</Name>
                  <Description>Use RNGCryptoServiceProvider class to generate random keys.
</Description>
                  <HowTo>byte[] key = new byte[128];
RandomNumberGenerator.Create().GetBytes(key); // The array is now filled with cryptographically strong random bytes
etc.,
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>1c7e48d4-2b9c-4d7e-afb5-b0d7de374a1a</Guid>
                  <Name>Use large keys (e.g., 128-bit symmetric or 1024-bit asymmetric keys)</Name>
                  <Description>In cryptography, size does matter. The larger the key, the harder it is to crack a block of encrypted data. So it is important to use large keys for encryption.
</Description>
                  <HowTo>Using Symmetric algorithm like 3DES:

TripleDESCryptoServiceProvider key = new TripleDESCryptoServiceProvider();
// Encrypt a string to a byte array.
byte[] buffer = Encrypt("This is some plaintext!", key); // default key size is 192 
// Decrypt the byte array back to a string.
string plaintext =  Decrypt(buffer, key);

Using Asymmetric algorithm like RSA:

byte[] key= new byte[1024] 
RandomNumberGenerator.Create().GetBytes(key);
//Create a new instance of RSACryptoServiceProvider.
RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();
//Create a new instance of RSAParameters.
RSAParameters RSAKeyInfo = new RSAParameters();
RSAKeyInfo.Modulus = key;
…
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>5d8fcbf7-f01e-4ba3-9277-e8b4e7c29990</Guid>
              <Name>Secret key stored insecurely</Name>
              <Description>The secret key must be stored securely other wise any unauthorized user/attacker can steal and get the information.</Description>
              <HowTo>1.	Check for clear text cryptographic secrets in config files, connection string, code etc.,
2.	Check for Access controls on the location where the secret key files are stored (ex: file shares, registry, database etc.,)
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>3cf6ed25-b7cf-46b7-a0d7-15b0446c8883</Guid>
                  <Name>Utilize platform supplied feature to store secret key (e.g., DPAPI)</Name>
                  <Description>Use Platform supported features for encryption/decryption. In windows 2000, DPAPI is a very simple API consisting of only a pair of function calls that provide OS-level data protection services to user and system processes. Since the data protection is part of the OS, every application can secure data without needing any specific cryptographic code other than the necessary function calls to DPAPI. These calls are two simple functions with various options to modify DPAPI behavior. Overall, DPAPI is a very easy-to-use service that will benefit developers that must provide protection for sensitive application data, such as passwords and cryptographic keys.
</Description>
                  <HowTo>DPAPI provides two functions CryptProtectData () and CryptUnprotectData () for encryption and decryption respectively.
Use CryptProtectData AND CryptUnProtectData 

 System.Security.ProtectedData namespace of .NET 2.0 

Code Snippet:
private static byte[] Decrypt(byte[] ciphertext) 
{ 	byte[] applicationEntropy = Encoding.ASCII.GetBytes("AcmeWidgets"); 
	return ProtectedData.Unprotect(ciphertext, applicationEntropy, DataProtectionScope.LocalMachine);
} 

For More Information: 
1. &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnsecure/html/1windataprotection-dpapi.asp&gt;
2. &lt;http://support.microsoft.com/default.aspx?scid=329290&gt;

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>1ad4a4db-d7a9-4d0d-92d0-c707be87acd7</Guid>
                  <Name>Follow principle of least privilege to provide limited access to the secret key</Name>
                  <Description>Allow access to the secret key file on the Need to Know basis to the users. The principle of least privilege requires that each subject be granted the most restrictive set of privileges needed for the specific task. 
</Description>
                  <HowTo>Identify the location of the secret key and restrict the access to the authorized users. 
For example if the secret key is stored in a file the below procedure can be implemented.
1.	Select the file 
2.	Right-click the file, click Properties, and then click the Security tab. 
3.	Click Advanced, and then do one of the following: 
Permission to set	Action item	
Set special permissions for an additional group or user	·  Click Add.  · In Name, type the name of the user or group, and then click OK. 	
View or change special permissions for an existing group or user	Click the name of the group or user and then click Edit.	
4.	In the Permissions box, select or clear the appropriate Allow or Deny check box. 
5.	In Apply onto, select the file you would like these permissions to be applied to. 
6.	To configure security so that the subfolders and files will not inherit these permissions, clear the Apply these permissions to objects and/or containers within this container only check box. 
7.	Click OK and then, in Advanced Security Settings for FileName, click OK. 
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>1fbd0b28-d475-4af5-b84b-8a0ecee93c2a</Guid>
                  <Name>Maintain key outside of the application domain (e.g., for a web server, keep the key outside of the </Name>
                  <Description>Always keep the key outside of the application boundaries. (Ex: do not keep in web root, application directories etc.,)
</Description>
                  <HowTo>1.	Store the key in the source control management like source depot, visual source safe etc. with proper ACL’s.
	
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>f7c456bd-6b10-4e1b-825b-e31600310397</Guid>
              <Name>Secret key transmitted insecurely</Name>
              <Description>The secret key will be compromised if it is transmitted over an unsecured communication channel. So the communication channel should be encrypted.
</Description>
              <HowTo>
1.	Identify the secret key transmission over protocols like http, ftp, soap etc., 

</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>02cc4a13-55f6-4baa-9b25-51411b1a58cc</Guid>
                  <Name>Utilize SSL or IPSec w/ Encryption to establish a secure communication channel</Name>
                  <Description>Use SSL to secure the communication channel. All traffic passed between the client and the application server should be secured. SSL is a protocol for secure network communications using a combination of public and secret key cryptography. Primarily it is used to encrypt Web communications.
</Description>
                  <HowTo>1.	&lt;http://support.microsoft.com/kb/299875/en-us&gt;
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>c8887f4c-a1c1-4432-bde0-f76804c28cf9</Guid>
                  <Name>Hide the underlying character pattern of the plain text</Name>
                  <Description>In cryptography, an initialization vector (IV) is a block of bits that is required to allow a stream cipher or a block cipher executed in the different streaming modes of operation to produce a unique stream independent from other streams produced by the same encryption key, without having to go through a (usually lengthy) re-keying process. The size of IV depends on the encryption algorithm and on the cryptographic protocol in use and is normally as large as the block or as large as the encryption key. The IV must be known to the recipient of the encrypted information to be able to decrypt it.
</Description>
                  <HowTo>Using .NET System.Security.Cryptography classes we can use unique random IV to hide the underlying character pattern of the plain text.

Code Snippet:

Private static void Encryption(String inName, String outName, byte[] desKey, byte[] desIV)
{
FileStream fout = new FileStream(outName, FileMode.OpenOrCreate, 										FileAccess.Write);
fout.SetLength(0);  

byte[] desIV  = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16}; 
.....
TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();          

CryptoStream encStream = new CryptoStream(fout, tdes.CreateEncryptor(desKey, desIV), CryptoStreamMode.Write);
Console.WriteLine("Encrypting..."); …
 }

For more Information:
&lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpcondecryptingdata.asp&gt;

</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>f83eff61-a123-49c9-b82a-2b03b38794a8</Guid>
                  <Name>If using a cryptographic hash algorithm, salt the hash value with a unique random bit stream</Name>
                  <Description>Due to the nature of hashing algorithms, they produce similar hash values when more than one input stream is of the same value. Hence, by looking at the hash outputs, it can be determined that the corresponding inputs are the same.  In order to avoid this problem, it is always important to salt the hash value with a unique random number for every operation so that the hash output for similar inputs will vary with the transaction.
</Description>
                  <HowTo>C# code:
string   plainText          		= "Hello, World!";    // original plaintext
string   passPhrase       		= "Pas5pr@se";        // can be any string
string   saltValue          		= "s@1tValue";        // can be any string
string   hashAlgorithm   		= "SHA1";             // can be "MD5"
int      passwordIterations 	= 2;                  // can be any number
string   initVector         		= "@1B2c3D4e5F6g7H8"; // must be 16 bytes
int      keySize            		= 256;                // can be 192 or 128

PasswordDeriveBytes password = new PasswordDeriveBytes(passPhrase, 
                                                        saltValueBytes, 
                                                        hashAlgorithm, 
                                                        passwordIterations);
string  cipherText = RijndaelSimple.Encrypt(plainText, passPhrase, saltValue,
hashAlgorithm, passwordIterations, initVector, keySize);
etc.,
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>2bba0a9a-2059-4cb3-b955-daade7c08aa0</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>42558865-4554-4199-b1f6-b8f549ececd9</Guid>
          <Name>Denial of Service</Name>
          <Description>A Denial of Service (DoS) attack is an incident in which a user or organization is deprived of the services of a resource they would normally expect to have. Typically, the loss of service is disruption of services like e-mail, directory services etc. In the worst cases, for example, a Web site accessed by millions of people can occasionally be forced to temporarily cease operation. A denial of service attack can also destroy assets in a computer system. Although usually intentional and malicious, a denial of service attack can sometimes happen accidentally. A denial of service attack is a type of information theft which will cost organization’s time &amp; money.

More information: &lt;http://en.wikipedia.org/wiki/Denial_of_service&gt;
</Description>
          <HowTo>The most common way to detect the potential of a Denial of Service attack:

1.	Identify entry points that accept user input (such as file upload, accepting user comments etc).
2.	Insert huge/unexpected input as an input and submit the request.
3.	Repeat step 3 until resources (memory, CPU Utilization) get exhausted.
4.	Identify whether application behaved in an unexpected way.
5.	Also identify whether an exception/error message was generated relating to request (e.g., Page cannot be displayed). 
Please note that the exception may be logged therefore simply checking the UI for an error message will no be sufficient.

</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>7c5322a5-f269-4425-a094-a36731a3dc17</Guid>
              <Name>Lacking or ineffective performance considerations</Name>
              <Description>The application or component builds strings by concatenating at runtime. For example
The following C# code snippet concatenates strings at runtime.

string sentence = "I really like riding roller coasters because they're super fun and have ups and downs, just like life!";
string[] words = sentence.Split(new char[] { ' ' });
string result = "";
for (int i = 0; i &lt; 1000; i++)
{
 foreach (string word in words)
 {
  	result = result + word + " "; //Concatenation
 }
}
</Description>
              <HowTo>1.	Identify code in the application/component instances of string concatenation. 

</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>9a998c11-2e57-4615-a4e3-42e8272dba9d</Guid>
                  <Name>Performance should be considered a requirement especially for areas of the application where availab</Name>
                  <Description>use StringBuilder over straight string concatenation in order to avoid performance bottlenecks.

</Description>
                  <HowTo>StringBuilder can be implemented in the following way. For example,
StringBuilder builder = new StringBuilder();
for (int i = 0; i &lt; 1000; i++)
{
 foreach (string word in words)
 {
  builder.Append(word);
  builder.Append(" ");
 }
}
result = builder.ToString();
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>8f224cb0-1ebb-4d99-8ecf-edbc1e2b1d60</Guid>
              <Name>Accepting arbitrary sized requests</Name>
              <Description>User supplied values (like file upload, comments) are not validated on the server-side or the validation is inappropriate. 

</Description>
              <HowTo>1.	Identify components that take user input (like files, comments). Example:
File.SaveAs(sFolderName &amp; "\" &amp; sUserSuppliedFileName)
String sComments = Request.Form(“Comments”);
2.	Identify user input that is only being validated on the client side (for example, using JavaScript).
3.   Identify user input that is being validated against an exclusion list of unacceptable characters. </HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>98f55fcb-a5f0-45d1-a7c0-fc6dfe946293</Guid>
                  <Name>An upper limit on the size of a request should be enforced (e.g., 1 meg HTTP request)</Name>
                  <Description>For each input, define the acceptable size of request, and enforce validation on the server side.

</Description>
                  <HowTo>File upload check can be implemented in the following way. For example:

string userFileName = Path.GetFileName(File.PostedFile.FileName);
if (File.PostedFile.ContentLength &lt; 1024) //1MB File check
{
	try
	{
		File.PostedFile.SaveAs(userFileName);

	}
}

User supplied comments can be checked in the following way.
If(Request.Form(“Comments”).Length &lt; 100) // check 100 characters
{
	// do process comments
}

In ASP.NET,  make use of maxRequestSize attribute to specify maximum file upload size.

&lt;httpRuntime maxRequestLength="1024"/&gt; //size in kbytes
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>805ad72e-af6f-4ada-a825-070afb48fd74</Guid>
              <Name>Building potential wildcard dynamic data queries using untrusted input (LDAP, SQL)</Name>
              <Description>In SQL, the LIKE keyword searches for character string, date, or time values that match a specified pattern. The LIKE keyword uses a regular expression to contain the pattern that the values are matched against. The pattern contains the character string to search for, which can contain any combination of the following four wildcards.

Wildcard 	Meaning 
% 		Any string of zero or more characters. 
_ 		Any single character. 
[ ] 		Any single character within the specified range (for example, [a-f]) or set (for example, [abcdef]). 
[^] 		Any single character not within the specified range (for example, [^a - f]) or set (for example, [^abcdef]).


The application constructs a SQL &amp; LDAP statements containing wild card search at runtime.  Example are given below:
strSQL = “SELECT * FROM TABLE1 WHERE COL1 LIKE ‘“ + Request.QueryString(“userInput”) + “’”
strLDAPStmt = “(some attribute=Request.QueryString(“userinput”))” //query becomes ‘(some attribute=user input)(|(cn=*))’

</Description>
              <HowTo>1.	Identify user input that is being used to construct dynamic SQL statements without being validated. Example:
strSQL = “SELECT * FROM TABLE1 WHERE COL1= ‘“ + Request.QueryString(“userInput”) + “’”
2.	Identify user input that is only being validated on the client side (for example, using JavaScript).
3.   Identify user input that is being validated against an inclusion list of unacceptable characters. </HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>c37679fc-713b-42b0-9156-6a43e4461f93</Guid>
                  <Name>Wildcard queries should be avoided - if they are necessary, consider using predefined views to speed</Name>
                  <Description>Don’t use wildcard queries. Use views instead of wildcard queries. Views can serve as security mechanisms by restricting the data available to users. Some data can be accessible to users for query and modification, while the rest of the table or database is invisible and inaccessible. Permission to access the subset of data in a view must be granted, denied, or revoked, regardless of the set of permissions in force on the underlying table(s).
</Description>
                  <HowTo>This can be implemented by one or more means. For example:

Views can be created by defining the SELECT statement that retrieves the data to be presented by the view. The data tables referenced by the SELECT statement are known as the base tables for the view. In this example, titleview in the pubs database is a view that selects data from three base tables to present a virtual table of commonly needed data:

CREATE VIEW titleview
AS
SELECT title, au_ord, au_lname, price, ytd_sales, pub_id
FROM authors AS a
     JOIN titleauthor AS ta ON (a.au_id = ta.au_id)
     JOIN titles AS t ON (t.title_id = ta.title_id)

</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>513d9591-c785-4dde-a1f0-3ff1190677e3</Guid>
              <Name>Inappropriately utilizing of shared resources</Name>
              <Description>Use of computer and/or network facilities in ways that impede the computing activities of others should be properly managed. These activities include randomly initiating interactive electronic communications or e-mail exchanges, overuse of interactive network utilities, overuse of network accessible bulletin boards or conferences, and the "off topic" posting of material to bulletin boards and conferences</Description>
              <HowTo>Poor/ inappropriate access control mechanism on shared resources.</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>747fef16-840b-44ed-a524-53fd6ad2ea19</Guid>
                  <Name>Use of shared resources (e.g., shared files) should be considered at design time</Name>
                  <Description>At the design time, access control to the shared resources/assets should be given on a need to know basis. Each resource/asset should be mapped to predefined trust levels, who actually require permissions.
</Description>
                  <HowTo>If shared resource is a Network file or folder, set  permissions as given below:

1. Right-click the shared file or folder, click Properties, and then click the Security tab. 
2. Do one of the following: 
a) To set permissions for a group or user that does not appear in the Group or user names box, click Add. Type the name of the group or user you want to set permissions for and then click OK. 
b) To change or remove permissions from an existing group or user, click the name of the group or user. 
3. Do one of the following: 
a) To allow or deny a permission, in the Permissions for User or Group box, select the Allow or Deny check box. 
b) To remove the group or user from the Group or user names box, click Remove.

</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>0ea0c00a-9790-43aa-aa78-2ccb71ba4f1e</Guid>
              <Name>In case of failure, application does not fail securely/intelligently</Name>
              <Description>If application fails with an unrecoverable exception condition, make sure that it fails securely and does not leave the system wide open. Ensure that the exception details are not propagated to user. Instead return generic error messages to user. Plan to handle errors using structured exception handling, rather than relying on method error codes.

</Description>
              <HowTo>1	Identify entry points that take user input in textboxes, query string values.
2	Insert unexpected values as an input and submit the request.
3	Identify whether an exception/error message was generated relating to action (e.g., Page cannot be displayed). 
Please note that the exception may be logged therefore simply checking the UI for an error message will not be sufficient. Check the logs as well. 

</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>a2de5053-07e7-4b84-9e1a-1362359b78fe</Guid>
                  <Name>Implement appropriate exception handling</Name>
                  <Description>The try...catch…finally statement provides a way to handle some or all of the possible errors that may occur in a given block of code. Handle errors that occur in the program, and provide generic error messages to user.

The tryStatements contain code where an error can occur, while catchStatements contain the code to handle any error that does occur. If an error occurs in the tryStatements, program control is passed to catchStatements for processing. The initial value of exception is the value of the error that occurred in tryStatements. If no error occurs, catchStatements are never executed.
</Description>
                  <HowTo>This can be implemented in the following way. For example:
try 
{
   tryStatements
}
catch(exception ex)
{
   catchStatements
}
finally 
{
   finallyStatements
}
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>25a677b7-0e9a-48d7-a81a-ac883c14ee62</Guid>
                  <Name>Don't display detailed error messages to users</Name>
                  <Description>All error messages should be trapped and a generic error message should be sent to the application client.
</Description>
                  <HowTo>This can be implemented by one or more means.
 For example, one can Return Generic Error Pages to the Client in the event of an unhandled exception, (i.e., the exception that propagates to the application boundary), return a generic error page to the user.  To do this, configure the &lt;customErrors&gt; element as follows:

&lt;customErrors mode="On" defaultRedirect="YourErrorPage.htm" /&gt;

The error page should include a suitably generic error message, possibly with additional support details. The name of the page that generated the error is passed to the error page through the aspxerrorpath query parameter.

You can also use multiple error pages for different types of errors. For example:

&lt;customErrors mode="On" defaultRedirect="YourErrorPage.htm"&gt;
   &lt;error statusCode="404" redirect="YourNotFoundPage.htm"/&gt;              
   &lt;error statusCode="500" redirect="YourInternalErrorPage.htm"/&gt;              
&lt;/customErrors&gt;

For individual pages you can supply an error page using the following page-level attribute:

&lt;% @ Page ErrorPage="YourErrorPage" %&gt;
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>8b44934f-9fd1-4137-91b5-8e998ebc508e</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>a0524d75-d2dd-4bb4-85f7-e5c8a40b9986</Guid>
          <Name>Forceful Browsing</Name>
          <Description>With the forceful browsing attack, the attacker gains access to a restricted page within a Web application by supplying a URL directly (forcing the URL) instead of accessing it by following links from other pages in the application. The intended workflow to get to the restricted page is through another page which authorizes the user to access the target page. This attack also allows attacker to gain access to resources to which no direct links exist. 

More information: 
&lt;http://www.devsource.com/article2/0,1895,1837351,00.asp&gt;
</Description>
          <HowTo>The most common way to detect the potential of a Forceful Browsing attack:

1.	Identify Vulnerable Files, Hidden Un-Referenced Files, Back-Up Files / Temp Files etc.,
2.	If user can be able to access the above files, then forceful browsing is achieved. 

</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>5b6cfca9-767e-45bb-8fbb-5f8cc5109b79</Guid>
              <Name>Poor authorization control</Name>
              <Description>Poor authorization control will give unauthorized users access to resources violating the ACLs. Many web site administrators leave files on the web server such as sample files or default installation files. When the web content is published, these files remain accessible although they are un-referenced by any HTML in the web. Many examples are notoriously insecure, demonstrating things like uploading files from a web interface. If an attacker can guess the URL, then the attacker is able to access the resource. Back-up files are also dangerous as many developers embed things into development HTML that they later remove for production. 

</Description>
              <HowTo>1.	Check for improper access control mechanism. (File Shares, web pages etc.,)
2.	Unauthorized user is able to access resources requiring authorization.
3.	An authenticated user is able to access the privileged resources by simply tampering   the fields in the URL
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</Guid>
                  <Name>Every object needs to have an authorization control</Name>
                  <Description>Authorization should be resource centric. Every privileged resource should be checked for authorization before granting access.

</Description>
                  <HowTo>1.	Implement proper Access control mechanism on resources.
2.	Remove unnecessary files, temp files, back up files etc.,
3.	Ensure proper authorization checking in the application when user accesses admin pages, performs sensitive operations etc.
 
Code Snippet1:
    If HttpContext.Current.User.IsAuthenticated Then
    lblUserName.Text = HttpContext.Current.User.Identity.Name
    If HttpContext.Current.User.IsInRole("Manager") Then
      'enable manager-level features
    End If
Else
    'deny access
End If

4.	Implement proper authorization for resources. 
For example in the web.config filec configure the application to use Forms-based security. This is done by changing both the &lt;authentication&gt; and &lt;authorization&gt; elements in the file:

&lt;authentication mode="Forms"&gt;
      &lt;forms name="login" 
             loginUrl="login.aspx" protection="All" timeout="60" /&gt;
&lt;/authentication&gt;
&lt;authorization&gt;
      &lt;deny users="?" /&gt; &lt;!-- Block unauthorized users --&gt;
&lt;/authorization&gt;
	   Etc., 
            5.   Remove unnecessary code that contains Easter egg &amp; trapdoors.

For More Information: 
For Authentication &amp; Authorization
&lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnadvnet/html/vbnet10282003.asp&gt;

For Authorization Manager (AzMan)
&lt;http://msdn.microsoft.com/msdnmag/issues/03/11/AuthorizationManager/&gt;

For Role provider information
&lt;http://msdn2.microsoft.com/8fw7xh74.aspx&gt;

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>404b751c-da61-428e-97f7-bcb279126328</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>05090938-4d8c-416e-b9fb-0adc0757df64</Guid>
          <Name>Format String</Name>
          <Description>A common function used to output data are the printf family of functions.  When a programmer calls these functions with user input without explicitly specifying a format string several threats are created.  By manipulating input to these functions, attackers can read and write to generally arbitrary regions of memory and create several unfavorable application conditions such as arbitrary code exection.
</Description>
          <HowTo>The most common way to detect the potential of a format string attack:

1.	Identify code instances were the printf classes of functions are called without providing explicit format strings.
</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>c287f10b-2e2d-4834-b286-d99154feac58</Guid>
              <Name>Use of an unmanaged language or native code</Name>
              <Description>The application or component uses an unmanaged language, native code or some language that is not deemed “memory safe” for implementation.
</Description>
              <HowTo>Common languages susceptible to format string attacks include:
1.	C
2.	C++

</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>1e73be39-d353-4b1e-aac8-d076c9493f57</Guid>
                  <Name>Use a managed language</Name>
                  <Description>Managed languages such as C# and Java are generally not susceptible to format string attacks and should be used whenever possible.

Note: Managed code makes format string attacks extremely difficult to encounter however not impossible.  For instance, managed code can call into unmanaged code and a format string attack can occur there.
</Description>
                  <HowTo>1.	Port component to use managed language or a memory-safe language such as C# or Java.
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>3cb25340-48d7-426e-919e-e987aad8b780</Guid>
              <Name>Use of printf classes of functions without specifying explicit format string</Name>
              <Description>When user input is blindly used as an input parameter with a printf class of function without specifying a format string an attacker can potentially perform malicious activities such as read and write to arbitrary memory.
</Description>
              <HowTo>Code Review
Manually inspect source code for instances were the component is calling a printf class function.

Example 1:

1	void SayHello(char * Name) 
2	{
3		printf(Name);
4	}

On line 3, note how printf is called without specifying an explicit format string.  An attacker could provide inputs such as “%x%x%n” to exploit this coding pattern.


Automated Code Scanning Tools
Source code and binaries should be scanned with source code analysis and binary analysis tools respectively to detect common format string attacks.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>5bf711be-d9fd-457a-8170-8f01ae091fdf</Guid>
                  <Name>Perform input validation in code</Name>
                  <Description>For each instance where user input is used with a printf class of function, explicitly specify a format string.
</Description>
                  <HowTo>Using the example from before, code should be fixed to ensure that explicit format strings are specified.

Example 1:

1	void SayHello(char * Name) 
2	{
3		printf(“%s”,Name); /* Explicit format string %s provided */
4	}

</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>7591314b-d3f0-48d7-aec4-cb7b63e51fff</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>b046b52f-ee02-4007-b980-ad53a043214f</Guid>
          <Name>HTTP Replay Attack</Name>
          <Description>Attacker Replays old HTTP requests to the web server by monitoring the HTTP packets from USER-Server traffic. The web server will not be able to differentiate the request sent by an attacker. With HTTP Replay attack, the attacker captures the user's authentication cookie using monitoring software and replays it to the application to gain access under a false identity.

More information: 
&lt;http://www.softwaresecuritywiki.com/index.php?title=HTTP_Replay_Attack&gt;
For Cookie replay attacks
&lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/THCMCh02.asp&gt;

</Description>
          <HowTo>The most common way to detect the potential of a HTTP Replay attack:

1.	User access valid site (ex: www.abcbank.com)
2.	User submits a request. (ex: for money transfer)
3.	Attacker tries to capture the HTTP packet using any sniffing tool. (ex. Netmon)  
4.	Attacker replays the packet and tries to access the actual site through this information.  
5.	If actual site consumes the request &amp; process it then it is prone to HTTP replay attacks.
</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>ad88e435-7efc-49d1-bdc1-184bcb690f2e</Guid>
              <Name>Ineffective or lacking verification of uniqueness of a request</Name>
              <Description>The inability to differentiate between an authentic request and a fake request will allow an attacker to perform a replay of a request and hence perform unauthorized actions. When an application does not store state to uniquely identify each user it is vulnerable to HTTP attack.

</Description>
              <HowTo>1.	Check for couple of requests for the same/different user.
2.	Check for uniqueness of request in application parameters like cookie, viewstate and also through timestamp, digital signature etc.

</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>8dfd62db-cd93-4e0e-8727-0b86df344778</Guid>
                  <Name>Provide a secure end-to-end communication channel between server and client (e.g., SSL)</Name>
                  <Description>All traffic passed between the client and the application server should be secured. SSL is a protocol for secure network communications using a combination of public and secret key cryptography. Primarily it is used to encrypt Web communications.

</Description>
                  <HowTo>1.	For implementation of SSL in IIS, refer &lt;http://support.microsoft.com/kb/299875/en-us&gt;

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>8ffda936-a069-4209-bfd7-dd5c3374d33e</Guid>
                  <Name>Associate state with requests &amp; users</Name>
                  <Description>Since HTTP is a stateless protocol each request is independent of the previous one and this allows an attacker to interlace his request with a client request. In order to ensure that each subsequent request originated from the client some common identifying across each request needs to be maintained. This can be done using language supported features.

</Description>
                  <HowTo>Data sent by the user must be validated on the server for each request.
Authenticate each request by adding unique session identifier to HTTP Request.
Example : ViewStateUserKey

If you authenticate your callers and use ViewState, set the Page.ViewStateUserKey property in the Page_Init event handler to prevent one-click attacks. 

Protect against spoofed post backs.
void Page_Init (Object sender, EventArgs e)
{
    if (User.Identity.IsAuthenticated)
        ViewStateUserKey = User.Identity.Name;
// ViewStateUserKey = Session.SessionID;
}
For more information: 
&lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/THCMCh10.asp&gt;

</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>548fa953-ef4f-4153-9ade-2605b11b7a3a</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>57a2b4e0-feb0-416f-bcbb-3730a200af43</Guid>
          <Name>Integer Overflow/Underflow</Name>
          <Description>Integer &lt;http://en.wikipedia.org/wiki/Integer_%28computer_science%29&gt; arithmetics are frequently used in computer programs on all types of systems.
The register width &lt;http://en.wikipedia.org/wiki/Register_width&gt; of the processor determines the native type of integer and the range of operand values. Typical binary &lt;http://en.wikipedia.org/wiki/Binary_numeral_system&gt; sizes for integers include 8 bits, 16 bits, 32 bits (the most common width as of 2005), 64 bits, and 128 bits. Since a math operation may give a result larger than the available register width, an error condition may result.

On systems where the result of an arithmetic operation is simply stored, and no error is returned (this is the general case), it may not be possible for the software to determine that the value stored is erroneous. If an integer value is used to specify the location of other code or variable values in memory, the resulting pointer &lt;http://en.wikipedia.org/wiki/Pointer&gt; error may be exploited to create a buffer overflow condition or to write and execute arbitrary (and possibly harmful) code to the resulting (and unexpected) position.

</Description>
          <HowTo>Scan code performing arithmetic operations. </HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>7039cb69-1163-4950-bd33-f2935d532fb7</Guid>
              <Name>Integer assignment or integer operations being carried out without validating the untrusted input </Name>
              <Description />
              <HowTo>1.	if (A + B &gt; MAX) return -1;
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>03a2bc2f-e785-41ef-9f49-9cf961a8245d</Guid>
                  <Name>Use Language features </Name>
                  <Description>Utilize platform checks for integer overflow/underflow.
</Description>
                  <HowTo>The .NET environment makes several properties and compiler switches available to you which will improve the security of your Web service or application.  These include:
	1. C#: CheckForOverflowUnderflow	(should be true)
	2. VB.NET: RemoveIntegerChecks		(should be false)
	3. C++.NET: /GS should be included as a compiler flag which currently protects against overflows via the attack vector of the return address and frame pointer.
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>9744a151-460a-4f42-80aa-1bf00e8455d2</Guid>
                  <Name>Validate user input </Name>
                  <Description>Using even safe string handling functions (http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnsecure/html/strsafe.asp) can lead to overflow/underflows if you calculate the buffer size incorrectly. Validate the untrusted input for upper and lower limits.  
</Description>
                  <HowTo>1. Compile C and C++ code with the highest possible warning level, /W4. 
2. Use size_t or DWORD for buffer sizes and element counts. There is no reason to use a signed value for such constructs. 
3. Keep in mind that a size_t is a different type depending on the platform you use. A size_t is the size of a memory address, so it is a 32-bit value on a 32-bit platform, but a 64-bit value on a 64-bit platform. 
4. If your code performs any kind of integer manipulation (addition, multiplication, and so on) where the result is used to index into an array or calculate a buffer size, make sure the operands fall into a small and well-understood range. 
5. Be wary of signed arguments to memory allocation functions (new, malloc, GlobalAlloc, and so on) because they are treated as unsigned integers. 
6. Watch out for operations that yield C4018, C4389, and C4244 warnings. 
7. Watch out for casts that cast away the C4018, C4389, and C4244 warnings. 
8. Investigate all use of #pragma warning(disable, Cnnnn) that disable the C4018, C4389, and C4244 warnings. In fact, comment them out, re-compile, and check all new integer-related warnings. 
9. Code migrated from other platforms or compilers may make different assumptions about data sizes. Watch out! 
10. If calling unmanaged code from managed code, make sure you confirm that it is signed correctly. Many arguments to Win32 APIs are unsigned ints or DWORDs, and many managed code variables are signed. 
11. Finally, if you are using managed code, make sure you catch OverflowExceptions, if appropriate. 
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>7591314b-d3f0-48d7-aec4-cb7b63e51fff</guid>
            <guid>c652fad5-5c06-40c9-8f71-074ea889a421</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>6b81ecc2-ca5a-42c8-80b6-b48ed1178124</Guid>
          <Name>LDAP Injection</Name>
          <Description>The Lightweight Directory Access Protocol (LDAP) API provides a mechanism for connecting to, searching, and modifying internet directories. A LDAP (Lightweight Directory Access Protocol) injection attack exploits vulnerabilities in input validation to run arbitrary LDAP statements against information directories. It can occur when your application uses input to construct dynamic LDAP statements to access directory services. Using the LDAP injection attack, the attacker can execute arbitrary statements against the directory services. 

More information: &lt;http://www.spidynamics.com/assets/documents/LDAPinjection.pdf&gt;

</Description>
          <HowTo>The most common way to detect the potential of a LDAP Injection attack:

1.	Identify entry points that collect user input such as text boxes, query string parameters, etc.
2.	Insert any character (‘(‘, ‘|’, ‘&amp;’) as an input and submit the request.
3.	Identify whether an exception/error message was generated relating to LDAP (e.g., Page cannot be displayed). 
Please note that the exception may be logged therefore simply checking the UI for an error message will no be sufficient.

</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>56e02953-06bd-4fcc-97bc-2f264cfdcfb4</Guid>
              <Name>Dynamic LDAP queries using untrusted input</Name>
              <Description>The application or component constructs a LDAP statement at runtime. The filter part is a bit more complicated and provides the mechanism for LDAP injections. User input is not validated on the server-side or the validation is inappropriate. Input validation can follow the principle of exclusions or the principle of inclusions. The principle of exclusions defines an exclusion list of characters that are unacceptable whereas under the principle of inclusions one defines an inclusion list of acceptable characters.

As example:

strLDAPStmt = “(some attribute=Request.QueryString(“userinput”))” //query becomes ‘(some attribute=user input)(|(cn=*))’
</Description>
              <HowTo>1.	Identify code in the application/component which constructs LDAP statements dynamically.
2.	Identify user input that is being used to construct dynamic LDAP statements without being validated. Example:
strLDAPStmt = “(some attribute=Request.QueryString(“userinput”))”
3.	Identify user input that is only being validated on the client side (for example, using JavaScript).
4.	Identify user input that is being validated against an inclusion list of unacceptable characters. 
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>42319d22-558e-47cf-81fc-5129509143d9</Guid>
                  <Name>Untrusted input should be validated against an inclusion list</Name>
                  <Description>For each input, define what is acceptable though either a regular expression, a list of acceptable characters, domain constrains or type casting and enforce this validation on the server side.

</Description>
                  <HowTo>This can be implemented by one or more means. For example, one can:
1.	Build a regular expression that defines an inclusions list of acceptable character sequences. For example:
if (Regex.IsMatch(Request.Form["ZIP"], "^\d{5}-\d{4}$"))
{
    // validation passed
}
else
{
    // validation failed
}
2.	If the input is of a primitive type, one can cast it. For example:
int x = Int.Parse(Request.Form(“param”))
3.	If the input can only be from a small (but varying) domain, one can define conditional statements to validate them. For example:
if ( (Request.Form(“favColor”) == “RED”) || (Request.Form(“favColor”) == “ORANGE”) )
{
	// validation passed
}
else
{
	// validation failed
}
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>09ef2c16-83bb-4905-9430-2e3bc622f9ff</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>9ab2b6fb-6464-4f6b-929f-ccdc68bf7b39</Guid>
          <Name>Man in the Middle Attack</Name>
          <Description>A man in the middle attack occurs when the attacker intercepts messages sent between the sender and receiver. The attacker then changes message and sends it to the original recipient.
The receiver has no way to identify if the message is from the actual sender.
Here the attacker is spoofing the identity of both sender and receiver.

More information: &lt;http://www.microsoft.com/technet/security/topics/architectureanddesign/ipsec/ipsecapd.mspx&gt; 
 
</Description>
          <HowTo>Any network request involving client-server communication is subject to man in the middle attacks. These include 
·	Web requests
·	Distributed Component Object Model (DCOM) requests
·	Calls to remote components 
Web services</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>2a5b686b-82a5-4699-b51a-e17a5a6d5db3</Guid>
              <Name>Insecure Communication Channel  </Name>
              <Description>Data is transmitted in clear text if the communication from client to server is through insecure protocols such as http. Hence secure the communication using secure protocols such as https.
 
</Description>
              <HowTo>Check if the application is using any insecure protocol like http, ftp etc.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>38a286dd-56d8-44bc-80e2-7c909037eeb2</Guid>
                  <Name>Utilize SSL or IPSec w/ Encryption to establish a secure communication channel</Name>
                  <Description>Use SSL to secure the communication channel. All traffic passed between the client and the application server should be secured. SSL is a protocol for secure network communications using a combination of public and secret key cryptography. Primarily it is used to encrypt Web communications.
</Description>
                  <HowTo>&lt;http://support.microsoft.com/kb/299875/en-us&gt; 
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>d87670de-c190-4fd3-8ea4-1597974ac92c</Guid>
              <Name>Lacking or inappropriate mutual authentication</Name>
              <Description>Mutual Authentication is a security feature in which a client must prove its identity to a server, and the server must prove its identity to the client, before any application traffic is sent over the network. Lacking or inappropriate mutual authentication makes the application prone to the Man-in-the-Middle attack.
</Description>
              <HowTo>Check if application is not using the client authentication feature in SSL (Server authentication is default in SSL), and HMACs. </HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>abec5995-6474-4f06-aa30-abe334ce9691</Guid>
                  <Name>Utilize a well-known authentication protocol to authenticate the server</Name>
                  <Description>Application should implement mutual authentication using Kerberos to authenticate both client and server. 

For further information, refer the following link &lt;http://www.microsoft.com/resources/documentation/Windows/2000/server/reskit/en-us/Default.asp?url=/resources/documentation/Windows/2000/server/reskit/en-us/distrib/dsbd_int_nzfa.asp&gt; 
</Description>
                  <HowTo>1.	Mutual Authentication Using Kerberos
&lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/mutual_authentication_in_a_windows_sockets_service_with_an_scp.asp&gt; 

2.	Mutual Authentication in a Windows Sockets Service with an SCP
&lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/mutual_authentication_in_a_windows_sockets_service_with_an_scp.asp&gt; 

3. Mutual Authentication using SSL
&lt;http://support.microsoft.com/kb/299875/en-us#XSLTH3135121122120121120120&gt; 

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>8b44934f-9fd1-4137-91b5-8e998ebc508e</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>95d78715-0c58-4271-a5c0-21befce6c914</Guid>
          <Name>Network Eavesdropping</Name>
          <Description>Network Eavesdropping is the act of monitoring network traffic for data, such as clear-text passwords or configuration information. With a simple packet sniffer, all plaintext traffic can be read easily. Also, lightweight hashing algorithms can be cracked and the payload that was thought to be safe can be deciphered.

More information: &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/THCMCh15.asp&gt;

</Description>
          <HowTo>The most common way to detect the potential of a Network Eavesdropping attack:

1.	Install any sniffing tool (e.g. Network Monitor, packetyzer, etc…) and observe the communication channel between the source and destination server. Check whether packets captured in the sniffing tools shows sensitive or high business impact data (like password, connection strings, bank a/c numbers &amp; cc number etc.) in clear text.

Below diagram shows packets captured in HTTP communication between client and server. 

Note: Sensitive data sent in clear text is shown in the red color

31 6B 32 38 39 50 35 77 77 41 4D 3D 22 20 2F 3E  1k289P5wwAM=" /&gt;
04E0:  0D 0A 0D 0A 09 09 09 3C 69 6E 70 75 74 20 6E 61  .......&lt;input na
04F0:  6D 65 3D 22 54 65 78 74 42 6F 78 31 22 20 74 79  me="TextBox1" ty
0500:  70 65 3D 22 74 65 78 74 22 20 76 61 6C 75 65 3D  pe="text" value=
0510:  22 63 72 65 64 69 74 20 63 61 72 64 20 6E 6F 3A  "credit card no:
0520:  20 34 34 33 33 20 34 34 35 36 20 34 32 33 33 20   4433 4456 4233 
0530:  32 33 34 35 22 20 69 64 3D 22 54 65 78 74 42 6F  2345" id="TextBo
0540:  78 31 22 20 73 74 79 6C 65 3D 22 5A 2D 49 4E 44  x1" style="Z-IND
0550:  45 58 3A 20 31 30 31 3B 20 4C 45 46 54 3A 20 35  EX: 101; LEFT: 5
0560:  39 32 70 78 3B 20 50 4F 53 49 54 49 4F 4E 3A 20  92px; POSITION: 
0570:  61 62 73 6F 6C 75 74 65 3B 20 54 4F 50 3A 20 31  absolute; TOP: 1
0580:  35 32 70 78 22 20 2F 3E 0D 0A 09 09 09 3C 69 6E  52px" /&gt;.....&lt;in
0590:  70 75 74 20 74 79 70 65 3D 22 73 75 62 6D 69 74  put type="submit
05A0:  22 20 6E 61 6D 65 3D 22 42 75 74 74 6F 6E 31 22  " name="Button1"

</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>a113e751-fcf2-417a-b8aa-1eede365161f</Guid>
              <Name>Communication channel is insecure (lacking confidentiality protection)</Name>
              <Description>Channel communication is in clear text between client and server. As a result sensitive information or high business impact data (like password, connection strings, bank a/c numbers &amp; cc number etc.) are transmitted in clear text.
</Description>
              <HowTo>1.	Install any network monitoring tools (e.g. netmon, packetyzer, etc…)
2.	Configure the tool to capture packets transmitted between client and server.
3.	View the packet information shown by the tool &amp; check whether the information is shown in clear text. 
4.	You can also recognize the channel by the type of protocol being used in the application. For example: FTP, HTTP, SNMP, TELNET, SMTP, POP3 are some examples of protocols which are inherently insecure and transmit data in clear text.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>44d81f2a-1287-4cc3-84f9-082fc99a38a3</Guid>
                  <Name>Utilize SSL or IPSEC w/ Encryption to establish a secure communication channel</Name>
                  <Description>SSL (Secure Socket Layer) provides encryption, authentication, and data integrity by using a public key infrastructure. When the SSL session is established, the server’s public key certificate is used to encrypt and exchange a shared secret between the client and server. This shared secret is then used to encrypt communications for the rest of the session. The following steps describe the process of establishing an SSL session:

1. The Web client requests the public key from the Web server.
2. The server sends the public key to the client.
3. The client sends the server a session key, encrypting it with the public key.
4. The server decrypts the session key received from the client by using the server’s private key.

HTTPS is the implementation of SSL over HTTP in web based applications. 

Following packet capture shows encrypted information because of implementation of SSL over HTTP:-
 
0000  00 0c cf 6b 14 0a 00 11  43 a5 95 1b 08 00 45 00   ...k.... C.....E.
0010  01 10 62 57 40 00 80 32  b6 16 41 34 2a d4 9d 3c   ..bW@..2 ..A4*..&lt;
0020  d8 09 c7 fe 10 76 00 00  00 c2 04 63 00 50 62 bd   .....v.. ...c.Pb.
0030  de f7 55 ed ed 63 50 18  fa c1 10 1d 00 00 16 03   ..U..cP. ........
0040  00 00 84 10 00 00 80 60  2f 84 ce 1e 24 62 6a d9   .......` /...$bj.
0050  50 3d 73 3a ec b3 d2 f3  d6 84 55 89 b7 9a 65 be   P=s:.... ..U...e.
0060  98 4d b0 72 bb 91 33 22  aa 82 80 73 ed 06 8e c5   .M.r..3" ...s....
0070  b1 2f d0 4e 6e 88 84 de  ca 29 e4 75 fc 1d ee ae   ./.Nn... .).u....
0080  7c 34 40 86 1a ce 97 62  43 10 be 22 96 7a a1 79   |4@....b C..".z.y


Internet Protocol Security (IPSec) is a framework of open standards for ensuring private, secure communications over Internet Protocol (IP) networks, through the use of cryptographic security services. IPSec supports network-level peer authentication, data origin authentication, data integrity, data confidentiality (encryption), and replay protection. 

</Description>
                  <HowTo>For implementation of SSL &amp; secure communication, refer the information provided in the following link: &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/SecNetHT14.asp&gt; 

For implementation of IPSEC, refer the information provided in the following link. &lt;http://www.microsoft.com/windowsserver2003/technologies/networking/ipsec/default.mspx&gt; 

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>8b44934f-9fd1-4137-91b5-8e998ebc508e</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>d4d29c02-255b-41db-a4df-3a3985fa448a</Guid>
          <Name>One-Click Attack</Name>
          <Description>One-click attack has been called by several names within the security community. It is can als be called -CSRF, Page bounce, and Session Riding attack. A one-click attack is, when a third-party attacker causes an action of their choice to be taken on a victim’s behalf at the vulnerable site.  In a one-click attack, the attacker must entice the victim into clicking a link or viewing a web page that was generated by the attacker. 
The attacker lures an unsuspecting user into browsing to the page, and then causes the page to be sent to the server where the view state is valid. The server has no way of knowing that the view state originated from the attacker. 
Consider this example, where vulnerable.com authenticates the user and subsequently maintains state using session cookies.  Vulnerable.com has an administration page, /admin/deluser.asp.  This page expects a query with the ID number of the user to delete as a parameter to the query.  The URL of such a request might look like this: 

https://www.vulnerable.com/admin/deluser.asp?user=12345

To launch the attack, the attacker only has to entice the administrator into viewing a hostile web page while the victim’s session at vulnerable.com is still active.
</Description>
          <HowTo>The most common way to detect the potential of a one-click attack:

1.	Identify the areas in the application which are performing critical operations (for ex. Deleting user, transferring funds etc.)
2.	Verify if the application is re-authenticating the user at these points or not.
3.	Verify if the application design checks whether these requests are being placed by the genuine users or not.
4.	Create a duplicate pre-filled form and try to post it to same vulnerable site in the background to launch the attack.
</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>233592a5-4075-48c9-ae81-cf3fb26b9046</Guid>
              <Name>Ineffective or lacking confirmation of user's actions</Name>
              <Description>If any critical operation (e.g. deleting a user) is performed without or ineffective confirmation from user for that action then code is vulnerable to one click attack.
If ( Request.QueryString("user") &lt;= MAX_USER )
{
	DataAccess.DeleteUser( Request.QueryString("user") );
}
As the above code states that there is no re-authentication or confirmation for the action being performed and the user is deleted just on the value of “user” id received through query string. 
</Description>
              <HowTo>1.	Identify code in the application which is performing any critical operations (e.g. deleting a user, changing the account number, etc).
2.	Check if the user is not re-authenticated before performing the operation or there is no user’s confirmation done for that action by the application.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>da747ca3-3d6a-4ddc-99da-bde8b2298fed</Guid>
                  <Name>Utilize human interactive proofs (HIPs) to confirm the action of an authenticated principle</Name>
                  <Description>Human interactive proofs (HIPs) are used to ensure that the process has not been scripted, in fact to prove human interaction with the system. If the process is not automated and possess a user’s interaction, it can mitigate the vulnerability.
</Description>
                  <HowTo>1.	HIPs can be implemented in ASP.NET code by using an abstract class “HipChallenge”.  Thus, a page which implements it will have a HipValidator that coordinates the other controls and validates whether the user successfully solved the puzzle.
For example, 
 

In this example, apart from user name and password the user must also enter text being displayed in the picture. It signifies that the process is not automated and actual user has performed the operation. Eventually, if the text entered by the user will match the text displayed in the picture, authentication process will complete.

More information on HIP: &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnaspp/html/hip_aspnet.asp&gt; 
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>3c01a6ed-4997-48e8-b964-bb3245bad727</Guid>
                  <Name>Make the request that encapsulates the users action unique for each authenticated user</Name>
                  <Description>Setting the ViewStateUserKey property can help to prevent one-click attacks on your application from malicious users. It does this by allowing you to assign an identifier to the view state variable for individual users so that they cannot use the variable to generate a one-click attack. You can set this property to any string value, such as the user's session ID or to the user's authenticated name.

If the application is not using ASP.NET, the following advice may prove helpful in developing countermeasures to this attack:

If your site places an un-guessable secret (such as the value of the session ID) in hidden form fields, and checks for it before servicing any request, then the attacker will be unable to create a form or querystring which your site will act upon.
</Description>
                  <HowTo>1.	If the application is ASP.NET, you can get the privilege of ViewStateUserKey by assigning a unique value to it.
void Page_Init (Object sender, EventArgs e)
{ 
   if (User.Identity.IsAuthenticated)
      ViewStateUserKey = User.Identity.Name;
} 
2.	For any code which has developed in ASP, you can generate a random number for each request and assign to a session variable as well as to a hidden variable of the form, which can be checked and validated before performing any critical operation.

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>548fa953-ef4f-4153-9ade-2605b11b7a3a</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>01e7e085-22c8-4c5b-a91a-41f6054d2cda</Guid>
          <Name>Password Brute Force</Name>
          <Description>A Password Brute Force attack is an automated process of trial and error used to guess a user’s credentials until successfully found. Brute Force Attack is performed using an educated guess to attempt to narrow down the key value. For example, someone could begin guessing a password by using a person’s first and last names, then spouse’s name, then pet’s name, and continuing with other common strings for passwords.  

More information: &lt;http://www.owasp.org/columns/mburnett/brutegeneral.html&gt;
</Description>
          <HowTo>The most common way to detect the potential of a Password Brute Force attack:

1.	Identify an entry point that collects user credentials as input such as text boxes, query string parameters, etc.
2.	Input guessed credentials; submit the request for n number of time until you succeed.[Note : this  can also be automated via brute force tools]
</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>1383e5e7-3516-4af4-8a87-21f66622f300</Guid>
              <Name>Ineffective or lacking password complexity check</Name>
              <Description>Application or Component uses weak or easily guessable password (like accepting single character or single digit as a password, not checking for proper password length or complexity factor etc). 
As Example

Password = “P”
</Description>
              <HowTo>1.	Identify the application/component which interactively asks user credentials.
2.	Try Create a user account with single alphabetic character(A to Z) or a weak password 
Note: If you are able to create a weak password e.g a single digit password, it will only take 26 attempts from an attacker to brute force your password.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>047465d2-46b6-4352-a85d-23d8c773c41c</Guid>
                  <Name>Enforce password complexity requirement</Name>
                  <Description>All passwords strings must match the complexity requirements &amp; must have the characteristics listed below.
</Description>
                  <HowTo>Strong passwords must have the following characteristics: 

·	Be at least 15 alphanumeric characters long on accounts with administrator privileges and at least 8 alphanumeric characters long on all other passwords.

·	Contain both upper and lower case characters (e.g., a-z, A-Z) 

·	Have digits and punctuation characters as well as letters e.g., 0-9, !@#$%^&amp;*()_+|~-=\`{}[]:";'&lt;&gt;?,./).  One or more of the characters from the second (2) to sixth (6) positions must not be an alphabet character e.g. between A-Z or a-z. 

·	Are not words in any language, slang, dialect, jargon, acronym, etc..., known to the individual creating the password. 

·	Are not words that have the O’s changed to zeros and/or I’s to pipes.

·	Are not based on personal information, names of family, etc. 
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>14b9b63a-6c42-4ad6-b3cc-2a266ec7bf8c</Guid>
              <Name>Ineffective or lacking lockout policy</Name>
              <Description>Account not locked after n number unsuccessful attempts.
</Description>
              <HowTo>1.	Identify the application/component which interactively asks user credentials. 
2.	Enter wrong password for the user for n (=3) number of times.
3.	Observe whether account locked or not.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>6121662b-4f9d-4922-a921-256f48cd4868</Guid>
                  <Name>Implement a lockout policy</Name>
                  <Description>Implement a lockout policy whereby n number of unsuccessful attempts disables the account. After n number of unsuccessful attempts account should be locked.
</Description>
                  <HowTo>1.	Create log for successful/unsuccessful logging attempts.
2.	Check log for subsequent unsuccessful login attempts [e.g more than 3 times] &amp; then lock that specific account.
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>57f1ccdf-d724-4c39-a521-3b6736e9f9d3</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>bfd6bd9e-a526-4d9d-9725-69f6b5a4b557</Guid>
          <Name>Repudiation Attack</Name>
          <Description>Repudiation is the ability of users (legitimate or otherwise) to deny that they performed specific actions or transactions. Without adequate auditing/Logging, repudiation attacks are difficult to prove. Repudiation attack allows an attacker to carry out a transaction and leave no evidence that the transaction was performed by the attacker. 

For more information, refer &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vbcon/html/vbconOverviewOfWebApplicationSecurityThreats.asp&gt; 
 
</Description>
          <HowTo>1.	Check if the application is configured with anonymous authentication.
2.	Check if the application implements a poor authorization model.
3.	Check if application lacks logging or maintains ineffective logging.

</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>cd0a41ad-19a5-4bb4-b6dd-f91e5e382ee6</Guid>
              <Name>Anonymous access enabled</Name>
              <Description>Anonymous authentication method requires no username/password to access the site. Anyone can just type in the URL and access the site. Basically with anonymous authentication, each transaction/operation performed by the user cannot be mapped to the user.

</Description>
              <HowTo>1.	In case of ASP.NET, anonymous authentication can be configured both at application level and machine level by using the authentication configuration element as give below: 

       &lt;authentication 
                            mode = "[None]"&gt; 
              &lt;/authentication&gt;

·	On Application level, it is configured in the web.config file     
·	On Machine level, it is configured in the machine.config file.
  
       
2.	In IIS also, we can see the anonymous access option. 
Go to IISàdefault website propertiesàdirectory securityàedit
Anonymous access check box is there. (Refer the snapshot below)

    






</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>56b9b256-4feb-465f-8b2a-c73fbf7881aa</Guid>
                  <Name>Disable anonymous access and authenticate every principle</Name>
                  <Description>Disable anonymous authentication and implement authentication for every principle. 
In ASP.NET, application should implement windows, forms or passport authentication which enables application to uniquely identify the user. </Description>
                  <HowTo>·	In case of ASP.NET, instead of setting mode to none, select any one from Windows, forms and passport authentication both in machine.config and web.config file as give below:

      &lt;authentication 
                            mode = "[Windows|Forms|Passport|]"&gt; 
      	       &lt;/authentication&gt;

·	Uncheck the anonymous access option on IIS.

</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>6688150c-4a79-4580-9139-9db5eea5f350</Guid>
              <Name>Application using a role-based authorization model</Name>
              <Description>In role-based authorization model, roles that are assigned to the user determine the tasks that a user can perform. If the application uses poor role based authorized model where the transaction/operation performed by the user cannot be uniquely identified, this can result in repudiation attack. 
</Description>
              <HowTo>·	Check the application design, code for the authorization model.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>acd82cd5-535b-46f8-aa63-e8b4c3a1abab</Guid>
                  <Name>More granular authorization model to produce precise logs at all tiers</Name>
                  <Description>Authorization model used by the application should be more granular. 
Authorization model should be implemented in such a way so that each transaction/operation performed by the user can be logged.

</Description>
                  <HowTo>Implement role based authorization model which is more granular in nature. Application should log each transaction/operation performed by to user.
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>2e29a481-74ff-4580-a564-8cda7041eb27</Guid>
              <Name>Application lacks logging or maintains ineffective logging  </Name>
              <Description>If Application doesn’t maintain logs, it is not possible to keep track of the transactions/operations performed by the user.

Also, if application maintains ineffective logs which do not include transaction/operation performed by user, user can repudiate that user has not performed the transaction/operation.

</Description>
              <HowTo>1.	In Web or FTP site
On the Web Site or FTP Site property sheet, if the enable logging checkbox is not selected.(Refer the snapshot below)

 
2.	In SQL Server,
Go to SQL Server Properties -&gt; Security Tab -&gt; Audit Level option, if none is selected
 


3.	In Application, 

Any critical operation performed by the user in the application is not logged in the application log file. 
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>7939ea2c-0c26-4483-b238-1f44ea5b0684</Guid>
                  <Name>Implement proper and effective logging</Name>
                  <Description>Application should implement proper and effective logging with all the relevant information getting logged in the application log files. Logs should help in identifying the following:
·	Identity transaction/operation preformed by the user in addition to the user name
·	Time 


Note: No sensitive information should be stored in logs (e.g., SSN, CC's, passwords, etc.)

</Description>
                  <HowTo>1.	In Web or FTP site, see if enable logging checkbox is selected.
2.	In SQL Server, check if audit level is not set to none.
3.	In Application, logging should be done programmatically for any critical operation performed by the user. 
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>548fa953-ef4f-4153-9ade-2605b11b7a3a</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>1273656a-d20c-42c8-982d-75f25c2b9fac</Guid>
          <Name>Response Splitting</Name>
          <Description>HTTP Response Splitting techniques provide attackers with new attack vectors for defacing website content and end-users.  User controllable input parameters placed into HTTP response headers in the absence of adequate data validation creates the potential for HTTP Response Splitting attacks. HTTP Response Splitting attacks allow for both local and remote cache poisoning which can result in arbitrary content being displayed to website visitors.  This type of attack is possible when server script code embeds user data in HTTP response headers in the absence of any data validation.  
More information: &lt;http://www.watchfire.com/resources/HTTPResponseSplitting.pdf&gt;
</Description>
          <HowTo>The most common way to detect the potential of a Response Splitting attack:

1.	Identify all the points where user controlled data is placed in to HTTP Response headers.
2.	Try to send this payload in the input which supposedly is being placed in the response header by the application.
a.	http://www.poorsite.com/abc.asp?Queryparameter=charset=%0d%0aContent-Length:%200%0d%0a%0d%0aHTTP/1.1%20200%20OK%0d%0aContent-Type:%20text/html%0d%0aContent-Length:%2019%0d%0a%0d%0a&lt;html&gt;Hacked!&lt;/html&gt;
b.	If you get back page with Hacked! displayed, then application is vulnerable to response splitting attacks.

Note: Response Splitting vulnerability is not exploitable in .Net Framework 1.0 SP3, 1.1 SP1 &amp; 2.0.

</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>3f59f9ac-7d46-4568-ac37-006639556dd5</Guid>
              <Name>HTTP Response headers populated with un-trusted input</Name>
              <Description>The essence of HTTP Response splitting is the attacker's ability to send a single HTTP request that forces the web server to form an output stream, which is then interpreted by the target as two HTTP responses instead of one response, in the normal case. The first response may be partially controlled by the attacker, but this is less important. What is material is that the attacker completely controls the form of the second response from the HTTP status line to the last byte of the HTTP response body. Once this is possible, the attacker realizes the attack by sending two requests through the target. 

As example: The application uses a Response.Redirect statement having a user input.

Response.Redirect(Request.Form("User_Input"))
</Description>
              <HowTo>1.	Identify code in the application which constructs Response.Redirect statements dynamically with user controlled data.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>6fa96039-0174-4fd7-95a7-5b47514cae9f</Guid>
                  <Name>Perform context-sensitive encoding</Name>
                  <Description>
                  For each input used in HTTP headers, it must be properly encoded using an encoding mechanism e.g. AntiXSS (http://msdn2.microsoft.com/en-us/security/aa973814.aspx). At a minimum strip CR and LF characters from data embedded into HTTP response headers.
                </Description>
                  <HowTo>This can be implemented by using the AntiXSS.UrlEncode function available in the AntiXSS library.
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>4aec6e7d-0c13-4af7-ad43-8be1a06ceb5c</Guid>
                  <Name>Un-trusted input should be validated against an inclusion list</Name>
                  <Description>For each input, define what is acceptable though either a regular expression, a list of acceptable characters, domain constrains or type casting and enforce this validation on the server side.
</Description>
                  <HowTo>This can be implemented by one or more means. For example, one can:

1.	Strip CR and LF characters from data embedded in to HTTP response headers. For Example :  
Function StripCRLFChar(strSource)

strSource=Replace(strSource,vbcr,"")
strSource=Replace(strSource,vblf,"")
strSource=Replace(strSource,vbcrlf,"")
StripCRLFChar=strSource

End Function
2.	Build a regular expression that defines an inclusions list of acceptable character sequences. For example:
if (Regex.IsMatch(Request.Form["ZIP"], "^\d{5}-\d{4}$"))
{
    // validation passed
}
else
{
    // validation failed
}
3.	If the input is of a primitive type, one can cast it. For example:
int x = Int.Parse(Request.Form(“param”))
4.	If the input can only be from a small (but varying) domain, one can define conditional statements to validate them. For example:
if ( (Request.Form(“favColor”) == “RED”) || (Request.Form(“favColor”) == “ORANGE”) )
{
	// validation passed
}
else
{
	// validation failed
}

5.	If input is URL then AsUrl function can be used to verify the user supplied URLs. For example
ReturnURL = AsUrl(ReturnURL)

The functionality implemented in AsUrl is as follows:
public static string AsUrl( string strInput )
	{
		if (strInput == null)
		{
			return "";
		}

		// this pattern will represent well-constrained URLs
string AURegex = @"^(?:http|https|ftp)://[a-zA-Z0-9\.\-]+(?:\:\d{1,5})?(?:[A-Za-z0-9\.\;\:\@\&amp;\=\+\$\,\?/]|%u[0-9A-Fa-f]{4}|%[0-9A-Fa-f]{2})*$";

		if (! Regex.IsMatch( strInput, AURegex ) )
	{
                	throw new Exception( "Unsanitized value passed to AsUrl" );
	}

		return( strInput );
	}
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>548fa953-ef4f-4153-9ade-2605b11b7a3a</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>53b8593e-074f-4d5f-84bb-dc2d59523f50</Guid>
          <Name>Session Hijacking</Name>
          <Description>Session hijacking is the act of taking control of a user session after successfully obtaining or generating an authentication session ID. In session hijacking an attacker using a captured, brute forced or reverse-engineered session ID seizes control of a legitimate user's Web application session while that session is still in progress. The severity of the damage incurred depends on what's stored in the session state.

</Description>
          <HowTo>The most common ways to detect the Session Hijacking attack are:
1.	The communication channel is over HTTP
2.	Site Vulnerable to XSS attack
3.	Session IDs in URL
4.	No authorization check in code.
5.	Use of persistent cookies.
</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>ad8ab792-4cd3-436d-ae8e-e8759f4bc1e1</Guid>
              <Name>Poor or predictable session identifiers</Name>
              <Description>Session ID guessing involves gathering / generating a bunch of session IDs and "guessing" a valid session ID assigned to someone else.  ASP.NET apps tend to be much less susceptible to this form of session hijacking because ASP.NET uses highly random 120-bit numbers for its session IDs unless you replace ASP.NET session IDs with IDs of your own. 

</Description>
              <HowTo>1.	Usage of predictable Session IDs like sequential numbers, weak pattern values.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>6d9f9db4-af9b-4f5a-beac-197925202f8e</Guid>
                  <Name>Use strong random numbers for session IDs</Name>
                  <Description>It is important that the session ID be unpredictable and the application utilizes a strong method for generating random IDs.  It is also important that the session IDs must be of a sufficient length to make it infeasible that a brute force method could be used to successfully derive a valid ID within a reasonable time.
</Description>
                  <HowTo>In implementation of Session ID should, need to fulfill the following criteria:
      *	It must be random - i.e. it should pass statistical tests of randomness. 
      *	It must be unpredictable - i.e. it must be infeasible to predict what the next random value will be, given complete knowledge of the computational algorithm or hardware generating the ID and all previous ID’s. 
      *   It cannot be reliably reproduced - i.e. if the ID generator is used twice with exactly the same input criteria, the result will be an unrelated random ID.
      *	Length of the value should be reasonably long.
   
</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>9d812f72-1ab2-4b8a-94b7-568793688f85</Guid>
              <Name>Long session timeouts</Name>
              <Description>For secure applications all session information should be time limited and allow for client-side cancellation, Session Timeout and server-side revocation. Failure to provide these security features and if the session has not been cancelled, it is very easy for any user to capture the last connection and use that session.
</Description>
              <HowTo>Login to the application and leave the application idle for a longer duration like 30 minutes
Login to application and after successful login, close the browser session. Now try to re-open the application. In both the cases, ideally application should ask for re-login.
 
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>bb535271-28f0-4236-a73b-4cb443fe2fd0</Guid>
                  <Name>smaller session timeout windows</Name>
                  <Description>The session time frame plays a vital role in reducing the number of session hijack attacks.  In order to hijack a session, an attacker should find out a valid session identifier with all the available means and should be able to reuse that before that time window expires.  By making the time frames small enough, we can clearly reduce the attack surface to a great extent.  
</Description>
                  <HowTo>To set the timeout value in IIS, 
    *	Right click on the virtual folder and open the ‘Website Properties’ dialog box.
    *	On virtual directory tab, click the Configuration button.
    *	In ‘Application Configuration’ dialog box, open up the ‘options’ tab.
    *	Enter proper session time out value in ‘Sesson Timeout’ text box. Note that this time is in minutes.
 
To set the timeout value in Web.config file for ASP.NET applications:
    *	Set the value of ‘timeout’ attribute of &lt;sessionState&gt; element to proper value. Note that this time is in minutes.

</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>548fa953-ef4f-4153-9ade-2605b11b7a3a</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>cfe62a60-dcc2-4d33-8d29-2eed8fef196e</Guid>
          <Name>SQL Injection</Name>
          <Description>A SQL injection attack exploits vulnerabilities in input validation to run arbitrary commands in the database. It can occur when your application uses input to construct dynamic SQL statements to access the database. It can also occur if your code uses stored procedures that are passed strings that contain raw user input. Using the SQL injection attack, the attacker can execute arbitrary commands in the database. The issue is magnified if the application uses an over-privileged account to connect to the database. In this instance it is possible to use the database server to run operating system commands and potentially compromise other servers, in addition to being able to retrieve, manipulate, and destroy data.

More information: &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/html/PAGHT000002.asp&gt;

</Description>
          <HowTo>The most common way to detect the potential of a SQL Injection attack:

1.	Identify entry points that collect user input such as text boxes, query string parameters, etc.
2.	Insert the single quote character (‘) as an input and submit the request.
3.	Identify whether an exception/error message was generated relating to SQL (e.g., .NET Framework SQLException). 
Please note that the exception may be logged therefore simply checking the UI for an error message will no be sufficient.
</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>ac19be3d-d86c-4cf8-b2d7-4e67196ddf8c</Guid>
              <Name>Use of Dynamic SQL</Name>
              <Description>The application or database server constructs a SQL statement at runtime. As example:

strSQL = “SELECT * FROM TABLE1 WHERE COL1= ‘“ + Request.QueryString(“userInput”) + “’”
</Description>
              <HowTo>1.	Identify code in the application which constructs SQL statements dynamically.
2.	Identify stored procedures which construct SQL statements dynamically.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</Guid>
                  <Name>Use parameterized SQL statement</Name>
                  <Description>Parameterized SQL statements will accept characters that have special meaning to SQL (like single quote) without problems because they are strongly typed.
</Description>
                  <HowTo>1.	All SQL statements should be hard-coded in the application.
2.	SQL statement parameters should be passed strongly typed.
.NET Framework (C#) example:

using (SqlConnection connection = new SqlConnection(connectionString))
{
  DataSet userDataset = new DataSet();
  SqlDataAdapter myDataAdapter = new SqlDataAdapter("SELECT * FROM TABLE1 WHERE COL1 = @colValue", connection);                
  myCommand.SelectCommand.Parameters.Add("@colValue ", SqlDbType.VarChar, 11);
  myCommand.SelectCommand.Parameters["@colValue "].Value = Request.QueryString(“userInput”);
  myDataAdapter.Fill(userDataset);
}
3.	Stored procedured should also be invoked using parameterized SQL statements.
.NET Framework (C#) example:
using (SqlConnection connection = new SqlConnection(connectionString))
{
  DataSet userDataset = new DataSet();
  SqlDataAdapter myCommand = new SqlDataAdapter("StoredProcedure", connection);
  myCommand.SelectCommand.CommandType = CommandType.StoredProcedure;
  myCommand.SelectCommand.Parameters.Add("@paramValue", SqlDbType.VarChar, 11);
  myCommand.SelectCommand.Parameters["@paramValue"].Value = Request.QueryString(“userInput”);
  myCommand.Fill(userDataset);
}

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</Guid>
                  <Name>Use stored procedure with no dynamic SQL</Name>
                  <Description>Stored procedures written in the database server with RAW or parameterized SQL statements.
</Description>
                  <HowTo>1.	If no parameters are needed, write your stored procedure using RAW SQL. Example:
CREATE PROCEDURE StoredProcedure
AS
        SELECT * FROM TABLE1
GO
2.	If parameters are needed for the stored procedure, construct parameterized SQL. Example:
CREATE PROCEDURE dbo.RunQuery
@var varchar(10)
AS
DECLARE @SQLString NVARCHAR(500)
DECLARE @ParmDefinition NVARCHAR(500)
SET @SQLString = N'SELECT * FROM TABLE1 WHERE COL1 = @value'
SET @ParmDefinition = N'@value varchar(10)'
EXECUTE sp_executesql @SQLString, @ParmDefinition, @value = @var
GO
	More information: &lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_sp_ea-ez_2h7w.asp&gt;

</HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>c8e53ffd-4431-4a6d-a9a1-98e7f594fd4a</Guid>
              <Name>Ineffective or lacking input validation</Name>
              <Description>User input is not validated on the server-side or the validation is inappropriate. Input validation can follow the principle of exclusions or the principle of inclusions. The principle of exclusions defines an exclusion list of characters that are unacceptable whereas under the principle of inclusions one defines an inclusion list of acceptable characters. The appropriate validation is done by following the principle of inclusions.
</Description>
              <HowTo>1.	Identify user input that is being used to construct dynamic SQL statements without being validated. Example:
strSQL = “SELECT * FROM TABLE1 WHERE COL1= ‘“ + Request.QueryString(“userInput”) + “’”
2.	Identify user input that is only being validated on the client side (for example, using JavaScript).
3.	Identify user input that is being validated against an inclusion list of unacceptable characters. For example an application that rejects the single quote (‘) character as a validation guard for potential SQL injection.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>a8447521-2f73-4449-af81-f2525c959974</Guid>
                  <Name>Untrusted input should be validated against an inclusion list</Name>
                  <Description>For each input, define what is acceptable though either a regular expression, a list of acceptable characters, domain constrains or type casting and enforce this validation on the server side.

</Description>
                  <HowTo>This can be implemented by one or more means. For example, one can:
1.	Build a regular expression that defines an inclusions list of acceptable character sequences. For example:
if (Regex.IsMatch(Request.Form["ZIP"], "^\d{5}-\d{4}$"))
{
    // validation passed
}
else
{
    // validation failed
}
2.	If the input is of a primitive type, one can cast it. For example:
int x = Int.Parse(Request.Form(“param”))
3.	If the input can only be from a small (but varying) domain, one can define conditional statements to validate them. For example:
if ( (Request.Form(“favColor”) == “RED”) || (Request.Form(“favColor”) == “ORANGE”) )
{
	// validation passed
}
else
{
	// validation failed
}
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>38eafd1a-25ec-4bb4-88c3-6e771e4b030f</guid>
          </RelevanciesGuids>
        </Attack>
        <Attack>
          <Guid>dd368e70-c1f9-4142-9aac-7a3a3efeced6</Guid>
          <Name>XML Injection</Name>
          <Description>An XML injection attack exploits vulnerabilities in input validation to create a new node to alter the program decision/flow. It can also be used to insert malicious characters into XML and break functionality. It occurs when the application uses input from the user to construct dynamic XML to send it to the backend database or does transformation to display it back to the user.

For More information: 
&lt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/html/wss_ch5_msgval.asp&gt;

&lt;http://msdn.microsoft.com/msdnmag/issues/02/04/xml/default.aspx&gt;

</Description>
          <HowTo>The most common way to detect the potential of a XML Injection attack:

1.	Identify entry points that collect user input such as form fields, query string parameters, etc.
2.	Identify the XML attributes that may be injected in XML, causing an unexpected behavior (such as exceptions while parsing the generated file, reference to external entities, tampering data, etc)
3.	If you use XML functions, such as constructing XML string or use XSLT template expansion with the tainted data, you are most likely vulnerable.


</HowTo>
          <Vulnerabilities>
            <Vulnerability>
              <Guid>655ce576-b4a3-48e6-b66a-90e5f53003cc</Guid>
              <Name>Inappropriate or lacking schema validation</Name>
              <Description>The application or database server constructs a XML statement at runtime using the user supplied data.
</Description>
              <HowTo>- Identify code in the application which processes XML data and check for XSD validation &amp; validation errors.
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>a3224948-fb41-4755-bf3d-55202d491e1f</Guid>
                  <Name>Use schema validation</Name>
                  <Description>A XSD (XML Schema Definition) is a recommendation of the World Wide Web Consortium (W3C). It is used to declare the structure of an XML document -which elements and attributes are allowed, is it a mandatory or an optional element, can there be more than one instance of an element, and so forth. Prevent XML injection attacks by ensuring that the XML input follows the rules specified in the schema.</Description>
                  <HowTo>Consider a below XML document that needs to have a Schema validation, 
Books.xml:-
&lt;?xml version="1.0"?&gt; 
&lt;bookstore xmlns="generic"&gt; 
   &lt;book genre="autobiography"&gt; 
       &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt; 
       &lt;author&gt; 
           &lt;first-name&gt;Ben&lt;/first-name&gt; 
           &lt;last-name&gt;Franklin&lt;/last-name&gt; 
       &lt;/author&gt; 
       &lt;price&gt;89.88&lt;/price&gt; 
   &lt;/book&gt; 
    ……
    ……
    ……
&lt;/bookstore&gt; 

Define a schema document Books.xsd for the above Books.xml file like below.

&lt;xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="generic" elementFormDefault="qualified" targetNamespace="generic"&gt; 
   &lt;xsd:element name="bookstore" type="bookstoreType"/&gt; 
   &lt;xsd:complexType name="bookstoreType"&gt; 
       &lt;xsd:sequence maxOccurs="unbounded"&gt; 
           &lt;xsd:element name="book" type="bookType"/&gt; 
       &lt;/xsd:sequence&gt; 
   &lt;/xsd:complexType&gt; 
   &lt;xsd:complexType name="bookType"&gt; 
       &lt;xsd:sequence&gt; 
           &lt;xsd:element name="title" type="xsd:string"/&gt; 
           &lt;xsd:element name="author" type="authorName"/&gt; 
           &lt;xsd:element name="price" type="xsd:decimal"/&gt; 
       &lt;/xsd:sequence&gt; 
       &lt;xsd:attribute name="genre" type="xsd:string"/&gt; 
   &lt;/xsd:complexType&gt; 
   &lt;xsd:complexType name="authorName"&gt; 
       &lt;xsd:sequence&gt; 
           &lt;xsd:element name="first-name" type="xsd:string"/&gt; 
           &lt;xsd:element name="last-name" type="xsd:string"/&gt; 
       &lt;/xsd:sequence&gt; 
   &lt;/xsd:complexType&gt; 
&lt;/xsd:schema&gt; 

Code Snippet:-

XmlSchemaCollection xsc = new XmlSchemaCollection(); 
xsc.Add("generic", HttpContext.Current.Server.MapPath("books.xsd");); 
Validate(HttpContext.Current.Server.MapPath("books.xml"), xsc); 
private void Validate(String filename, XmlSchemaCollection xsc) { 
	XmlTextReader reader = null; 
	XmlValidatingReader vreader = null; 
	reader = new XmlTextReader (filename); 
	vreader = new XmlValidatingReader (reader); 
	vreader.Schemas.Add(xsc); 
	vreader.ValidationEventHandler += new ValidationEventHandler (ValidationCallBack); 
	try { while (vreader.Read())   {} } 
	catch { 	Output.Text = "XML Document is not well-formed."; } 
		vreader.Close(); 
} 

</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
            <Vulnerability>
              <Guid>8547b53b-ebc1-4327-a2ce-a83cdd4156d3</Guid>
              <Name>Dynamic XML generation using untrusted input</Name>
              <Description>User input such as form data/database values are concatenated by the application into an XML string.  If the application does not validate or encode potentially malicious characters, a user may be able to inject additional XML data to create his/her own nodes or attributes within the string.

</Description>
              <HowTo>-     Identify user input that is being used to construct dynamic XML to alter program decision/flow without being output encoded. Example:
strAuthor = Request.QueryString("author");
Response.Write “&lt;name&gt;" + strAuthor + "&lt;/name&gt;";
</HowTo>
              <Mitigations>
                <Mitigation>
                  <Guid>5cf0b911-649c-407a-bed5-ecd86c8a3298</Guid>
                  <Name>Perform context-sensitive encoding</Name>
                  <Description>
                  For each input which is concatenated to an xml string do output encoding before displaying it to the page. Example, use AntiXSS.EncodeXML (http://msdn2.microsoft.com/en-us/security/aa973814.aspx) to do the output encoding.
                </Description>
                  <HowTo>This can be implemented as below For example, one can:
Response.Write "&lt;From&gt;" + AntiXSS.XmlEncode(strFrom) + "&lt;/From&gt;";

                  AntiXSS can be found here:
                  http://msdn2.microsoft.com/en-us/security/aa973814.aspx
                </HowTo>
                  <IsCore>true</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
                <Mitigation>
                  <Guid>9a5f3f67-9d5f-41b6-ae63-0c73c3f465f7</Guid>
                  <Name>Untrusted input should be validated against an inclusion list</Name>
                  <Description>For each input, define what is acceptable by using a regular expression, a list of acceptable characters, domain constraints or type casting and enforce this validation on the server side.
</Description>
                  <HowTo>This can be implemented by one or more means. For example, one can:
1.	Build a regular expression that defines an inclusions list of acceptable character sequences. For example:
if (Regex.IsMatch(Request.Form["ZIP"], "^\d{5}-\d{4}$"))
{
    // validation passed
}
else
{
    // validation failed
}
2.	If the input is of a primitive type, one can cast it. For example:
int x = Int.Parse(Request.Form(“param”))
3.	If the input can only be from a small (but varying) domain, one can define conditional statements to validate them. For example:
if ( (Request.Form(“favColor”) == “RED”) || (Request.Form(“favColor”) == “ORANGE”) )
{
	// validation passed
}
else
{
	// validation failed
}
</HowTo>
                  <IsCore>false</IsCore>
                  <Cost>0</Cost>
                </Mitigation>
              </Mitigations>
            </Vulnerability>
          </Vulnerabilities>
          <RelevanciesGuids>
            <guid>16afa76d-14a2-4736-a2be-b9822ea5f295</guid>
          </RelevanciesGuids>
        </Attack>
      </Attacks>
    </Attacks>
    <Relevancies>
      <Guid>6c041126-4767-481b-b6a9-720306a206bc</Guid>
      <Name>Relevancies</Name>
      <Relevancies>
        <Relevancy>
          <Guid>7591314b-d3f0-48d7-aec4-cb7b63e51fff</Guid>
          <Name>Component utilizes C/C++ code</Name>
          <Description>Component utilizes unmanaged code (e.g., C/C++).</Description>
        </Relevancy>
        <Relevancy>
          <Guid>5072626b-5643-4b84-973c-9d6180d06c21</Guid>
          <Name>Component performs file Input/Output (I/O)</Name>
          <Description>Components performs file I/O.</Description>
        </Relevancy>
        <Relevancy>
          <Guid>404b751c-da61-428e-97f7-bcb279126328</Guid>
          <Name>Component exposes a Web browser interface</Name>
          <Description>Component exposes a web-based browser interface.</Description>
        </Relevancy>
        <Relevancy>
          <Guid>2bba0a9a-2059-4cb3-b955-daade7c08aa0</Guid>
          <Name>Component utilizes Cryptography</Name>
          <Description>Component utilizes cryptography.</Description>
        </Relevancy>
        <Relevancy>
          <Guid>8b44934f-9fd1-4137-91b5-8e998ebc508e</Guid>
          <Name>Component utilizes a network protocol</Name>
          <Description>Component establishes communication over a network protocol.</Description>
        </Relevancy>
        <Relevancy>
          <Guid>548fa953-ef4f-4153-9ade-2605b11b7a3a</Guid>
          <Name>Component utilizes HTTP</Name>
          <Description>Component establishes communication over HTTP protocol.</Description>
        </Relevancy>
        <Relevancy>
          <Guid>c652fad5-5c06-40c9-8f71-074ea889a421</Guid>
          <Name>Component performs arithmetic operations</Name>
          <Description>Performs critical arithematic operations in managed code (e.g., C#).</Description>
        </Relevancy>
        <Relevancy>
          <Guid>09ef2c16-83bb-4905-9430-2e3bc622f9ff</Guid>
          <Name>Component constructs LDAP queries</Name>
          <Description>Component constructs LDAP queries.</Description>
        </Relevancy>
        <Relevancy>
          <Guid>57f1ccdf-d724-4c39-a521-3b6736e9f9d3</Guid>
          <Name>Component utilizes Forms Authentication</Name>
          <Description>Component accepts authentication using interactively entered credentials.</Description>
        </Relevancy>
        <Relevancy>
          <Guid>38eafd1a-25ec-4bb4-88c3-6e771e4b030f</Guid>
          <Name>Component constructs SQL queries</Name>
          <Description>Component constructs SQL queries.</Description>
        </Relevancy>
        <Relevancy>
          <Guid>16afa76d-14a2-4736-a2be-b9822ea5f295</Guid>
          <Name>Component constructs XML data blobs</Name>
          <Description>Component constructs XML blobs.</Description>
        </Relevancy>
      </Relevancies>
    </Relevancies>
  </AttackPatternLibrary>
  <Threats>
    <Guid>e4d8bbcf-8b6b-44eb-ad4c-2146a8a46241</Guid>
    <Name>Threats</Name>
    <ConfidentialityThreats>
      <Guid>3d857393-9806-4537-99c2-ec93e2f66c1c</Guid>
      <Name>Confidentiality Threats</Name>
      <Threats>
        <ConfidentialityThreat>
          <Guid>507ae2b3-042f-431b-9f5e-bbfcebb74479</Guid>
          <Name>Unauthorized disclosure of &lt;create&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; C &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>e8fa3b0c-9607-4552-a6cc-d6f8d4e09f11</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>47f2fe28-ad56-44f9-91ec-fb80ed3e7bfd</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>be8a9fd3-b1b1-4992-9990-b31db8c561f7</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ee049405-d34f-4713-a063-51e99c5a6912</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c260415a-121e-4f94-a886-991c1024a0b9</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9e074c95-8a01-4361-bc2c-2877d291c583</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a17369ca-93f6-4b33-b8f5-cb673b913048</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>464621fa-fc6a-4716-8637-8f56298f025b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>08ae725f-477c-4d8b-b1d5-f7f0cb103e0d</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>f8cc6717-53cb-4f6d-bea3-acf86d8dd6de</Guid>
          <Name>Unauthorized disclosure of &lt;read&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; R &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>6831bbe7-aaae-4d28-8129-a036cd5be3a9</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ec55cac6-1bc2-4596-b171-6e3bdc6c2695</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>31ca38de-2f37-4e3c-a772-b2a077f5c8e0</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c9e79186-36a3-4e76-83fd-5778577e0558</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>6a56b319-8b86-4cb2-b33d-20f8c62fd46e</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e12d2b10-ba0f-4240-b515-c066dde2f137</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c0aa6fe2-d9de-451e-bf4f-4d3512091a33</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bd48d27a-95f5-4ce0-a762-f0992058c844</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>a1146a44-a884-4447-ba00-adb3f2027d8c</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>0307a318-97eb-4cf7-b751-65a11b2cc183</Guid>
          <Name>Unauthorized disclosure of &lt;delete&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; D &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>281e3858-98cc-4758-94ad-9dda51df0373</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>437c5397-5da7-4f73-ae17-4e279de58cbf</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a6a8b9b3-4c2c-4615-99a8-a7b60253e374</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>49bdce6f-554e-4843-ae78-62ca25ce8bde</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e595193c-7c0e-4a2b-afd6-43dd9f63ed61</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f89306a1-4332-4b89-99c1-2bfdc1a683b9</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>eb8c0890-dbab-48df-979d-c37b09054dee</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>94c0eace-c6ed-4445-84c6-e7ea7c324a3b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>ab48523f-0df5-4a87-a214-82ba884edab8</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>9bf764a4-4adc-48bd-b72c-1b845c6e4189</Guid>
          <Name>Unauthorized disclosure of &lt;create&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; C &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>c1614c8e-2d4e-4556-91c4-e21e9c610f2d</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>47c039f1-b13a-4206-9e73-b035a6f6d38e</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>67980e25-1546-485e-be6d-412b7149fcfb</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>625ab059-9d9d-4deb-8e6a-668f855fce11</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a02390fe-25d2-428e-a037-d9b13fad2946</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1f204de8-c24b-4b8c-b886-4e1bfef4fd88</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e84793c2-6bb0-4518-aa7b-8932167de4bb</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>562a9dc1-aca0-48ab-a205-3a7d926eee09</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d40257cd-dd66-40f2-bbf6-ba7c4be1fced</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f72a762b-594e-411e-aefe-b6ba38e4935f</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>c4aaabc3-9022-4410-b689-188aad500d2e</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>d7ef9aa2-bb62-452b-ac8e-698bc7f63c88</Guid>
          <Name>Unauthorized disclosure of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>aa914427-3e28-4954-a282-ea1cbff8ff4a</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>25392db9-5ae4-4974-80c0-906cd6f64e70</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5172e551-1117-4b6e-95d8-def2b13e360f</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>40c6005c-44d9-4423-8280-c2d8b329e08b</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>68545659-da9e-4a7e-bba4-908642de1680</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9bbf48f2-03ae-4850-9cce-cc07000814c8</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>76efc10f-ca6c-47ff-92ce-e1d5aea45c64</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>87f0314f-5ee9-483d-ba9e-0bb455830267</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2d581b76-4860-4c45-82e2-7a26eea31c94</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>62729ee4-42f6-4619-a323-0042f90773d2</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>243fcfb8-7258-4d2c-a8d5-24a6109fdc6e</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>316427ef-c3f4-4d87-a9ce-d3b60e704727</Guid>
          <Name>Unauthorized disclosure of &lt;update&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; U &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>522e63f6-062f-462d-9481-ab79b33a506b</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0f1005ef-a7bc-43d0-8388-b24ea2f2a4fc</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f1a07549-c3fb-49ca-81fd-c4510aaced92</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>169eae80-c55a-47a2-8c44-4d77403307b3</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e2127810-f96d-4a6f-ab5f-f4f44ecdc8e0</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ab8634ff-5742-4946-a0e3-b752f23f6eb1</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cdce892d-f38c-468f-a95a-72f15e01e07b</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>3ea2d500-41ff-49cd-9878-7f57d89a81ec</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d1e893c5-59e3-4e20-b6e7-c80bd9d7a8a2</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>00d231b9-df2a-4383-9b17-ed70159b8f2f</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>d34ee77d-587b-4657-84e8-0baf4c4ab1c4</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>21190050-3548-4fe1-830d-b77f86d7aaa9</Guid>
          <Name>Unauthorized disclosure of &lt;delete&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; D &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>dee6931d-bb59-401c-b628-ad66774b6da6</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>b181b402-1325-4333-ae80-e5b548b60a4b</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>684d6933-8eaa-4b03-8cf1-18eca1dbbf07</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8d3ca09a-03a9-4053-b31a-1333e8664bc5</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a0f5e3be-e6d6-49ff-b6d1-77bf7862a711</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>81dc0f6e-3832-4c98-8e66-3766df1d542b</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cb1c796b-4095-4267-bb91-a769b80ee647</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9809bf2c-c8e0-4e63-a9b7-215e73e9390a</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a198558f-a48a-48f2-8830-4580352e24fe</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8c039898-78a5-41dc-ac27-004747df9996</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>b5839925-a51b-414d-b0a8-eec706afaf16</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>0f78f9fe-4ba0-409e-b355-ed82f3f61e6e</Guid>
          <Name>Unauthorized disclosure of &lt;read&gt; using &lt;Component 1 - Profile info&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;AUTHORIZED read update Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; R &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; R &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>174cbc90-16fc-4b0e-8d8c-24295c471b7e</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>384d8f25-ffce-4f3f-8b39-c0fb0525fc8b</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0de2917d-6986-450b-bd9c-c2c3a8f3be81</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0e3528c4-a9c7-4c75-975c-e281d832b0db</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>fe15a55d-caeb-46f8-bec1-3c530ebb8db7</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>64310b94-741a-402b-8c10-d0bc964c051e</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>7ac07d4f-6838-4ba4-96b6-ef5c27240fa2</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1dfa318e-fe9f-4255-af50-b2d3983a641b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>509def30-cd5b-4f8f-8ad1-063a916b9df2</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>63f9af23-961b-4348-a29d-2e400e2bb424</Guid>
          <Name>Unauthorized disclosure of &lt;update&gt; using &lt;Component 1 - Profile info&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;AUTHORIZED read update Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; R &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; U &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>dadc3cea-6ca7-4b24-90e4-6756206eb1c1</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>6be5c4f9-7959-4f0b-944e-2fcdd37c4f8a</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>78330786-eb26-4124-9d38-baa05ac7f556</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>61ccb5b3-10db-4d67-81d6-4511973073cc</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>12de29f8-85ad-4300-a9e6-8a3ff2c8a59e</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>09be9e2f-e938-4aa2-bb7c-961d4fca0d0f</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bf6c0853-d8b2-4737-ad5e-e19ef1ec2a18</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9b8509ee-645c-4e9e-83fd-723f6f0dd441</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>b2e65ecd-23ae-463b-8f0d-30b360f48886</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>801f04fe-34e8-4a4e-beed-80c7223de7d7</Guid>
          <Name>Unauthorized disclosure of &lt;create&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; C &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>ad070769-eb47-4ba0-9640-f8cbd0fbfa12</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>73320cfc-5c82-4d51-816e-22f80797ca09</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>446263ce-b212-4501-acc5-f6f7b0958345</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>14c95189-10e6-4661-a9b2-e2f87cbb4d38</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>4e343a31-4145-46ab-af4a-f84db9f3c72a</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>eed98be9-1598-45d3-9cfe-22bf0d287091</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0cc2cca8-8706-4366-9130-78e38806d8c5</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8e88c0e4-f6f7-458b-9737-aaf1e8e783ca</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2454f2c9-7b43-422a-b663-c28e91604bbe</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>af811916-d417-4a84-aef1-c2dde153bf19</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>0c574af6-824f-41c0-8a97-9da3749b98b4</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>8f1159ea-8789-431e-954e-054baf376859</Guid>
          <Name>Unauthorized disclosure of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>ec54d4e3-6158-4fa6-bccd-1fa89aeb8db6</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5913bd2f-a35d-46ec-8df9-5bcaec633cd9</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c854e7d2-d180-4e95-aaaf-26b0d58ccae9</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c3931455-c9cf-45e2-9b4e-3ca9f809ce11</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ed5f3080-da7b-4db5-8807-c74e252397f3</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e03ba942-37c7-45ab-8494-00e90bbf7518</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>af46c279-6846-408b-b5ac-6d10487433b2</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0afab718-7299-4c6c-b98e-dd93d93fa7cb</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1462ef76-0c37-4315-a373-c032796ac65f</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>3da233a3-e7b0-4acd-82ae-26af3da3834e</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>7b590b6e-c81d-4039-bd1b-1939967e0db5</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>8208e738-3cec-45b2-a552-318718846332</Guid>
          <Name>Unauthorized disclosure of &lt;update&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; U &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>12f1f295-6633-4257-8578-a5f9d45903dc</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>fb6d9fe7-f982-434a-9435-47a108b09223</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a0449208-e324-40ce-b9bd-10360726d727</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>633702e6-af16-49f0-afc6-629fdfa1bfe4</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9ef68fdb-5777-4dc3-bffb-a85359727b70</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>630bd9f8-3fb7-40c9-be6b-b73163d0eb41</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>71cfb959-713f-4c5a-8838-824502da84fa</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>433d56d9-28ab-4dda-a2f5-e71a896aa901</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e2ea2d9d-fc0f-4dee-8cc4-466765c6352d</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2d03e26f-6660-4467-bafd-1262ce9ddca4</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>86af7fb9-32a5-4333-8444-ed91b90e2c88</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>acdb2ab4-1474-4cb0-8ec5-393ebf7c21c1</Guid>
          <Name>Unauthorized disclosure of &lt;delete&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; D &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>225e535c-0682-43a6-9f32-38194186e31b</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cfaa679e-00aa-49bc-a5be-ff81d4f7a602</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>082871f9-720b-453f-b27e-1eca85aafa45</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d3a4b3d9-f0f4-4dfa-bdea-76e8b7373bd7</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0d0c1da9-8344-4c82-b8bd-3ff005dd0b66</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>594d9d3e-7d65-47f6-96df-84dd4c33919a</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>48894d8f-0814-4c83-ae9e-628216cb889a</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>60d41a7c-976f-4cc4-bcc8-abff117720fe</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5a3767d7-1f63-410d-a3fe-f15d571e76e1</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>df79853e-bfbf-46da-bf41-01bf979676f9</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>8a5b844b-cc30-4b6e-972f-483551ef20b9</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
        <ConfidentialityThreat>
          <Guid>5455367a-5070-4dbd-979b-59bb095b357b</Guid>
          <Name>Unauthorized disclosure of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;UNAUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;UNAUTHORIZED read Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

UNAUTHORIZED_USERS &lt; &gt; 

Details of the action:

Caller: &lt;UNAUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>b06fc230-058d-4647-8518-07fe1321b167</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>8b835fa5-d366-4f4f-94cf-8e0ce55436d8</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>dae501fe-6dbb-404c-ad1f-69b35caa08d1</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9ae5dece-4630-420c-af9d-e3b496e08445</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>13dcff36-290e-4621-a7ff-37295df1f579</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f972d7a4-94d3-4a49-8401-3e5f5c5a6d62</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8e9178a2-0c43-4440-8ec0-5b378ee9dba4</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>77620aa3-3d40-42b9-a723-d0bbb337e1c6</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>b3ede5ff-da1e-4e4e-9613-d8849fe79981</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>69b5eb0f-b8fb-4b69-9a2c-c82bf0f966f6</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bae26b86-dd0e-47f0-b02b-0ef79218e99c</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>dce948d4-2ed8-4799-b544-a62ad7a8f639</CallGuid>
          <IsIdentityDisclosure>false</IsIdentityDisclosure>
          <IsDataDisclosure>false</IsDataDisclosure>
        </ConfidentialityThreat>
      </Threats>
    </ConfidentialityThreats>
    <IntegrityThreats>
      <Guid>340c51df-4f88-4ce6-9da0-aac3bb2583d4</Guid>
      <Name>Integrity Threats</Name>
      <Threats>
        <IntegrityThreat>
          <Guid>15c01fb6-6e9a-4f54-b50c-09cd3cda8d66</Guid>
          <Name>Illegal execution of &lt;create&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; C &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>e8fa3b0c-9607-4552-a6cc-d6f8d4e09f11</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>47f2fe28-ad56-44f9-91ec-fb80ed3e7bfd</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>be8a9fd3-b1b1-4992-9990-b31db8c561f7</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ee049405-d34f-4713-a063-51e99c5a6912</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c260415a-121e-4f94-a886-991c1024a0b9</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9e074c95-8a01-4361-bc2c-2877d291c583</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a17369ca-93f6-4b33-b8f5-cb673b913048</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>464621fa-fc6a-4716-8637-8f56298f025b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>08ae725f-477c-4d8b-b1d5-f7f0cb103e0d</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>9809851e-cdf6-4122-8c45-72b086074034</Guid>
          <Name>Illegal execution of &lt;read&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; R &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>6831bbe7-aaae-4d28-8129-a036cd5be3a9</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ec55cac6-1bc2-4596-b171-6e3bdc6c2695</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>31ca38de-2f37-4e3c-a772-b2a077f5c8e0</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c9e79186-36a3-4e76-83fd-5778577e0558</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>6a56b319-8b86-4cb2-b33d-20f8c62fd46e</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e12d2b10-ba0f-4240-b515-c066dde2f137</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c0aa6fe2-d9de-451e-bf4f-4d3512091a33</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bd48d27a-95f5-4ce0-a762-f0992058c844</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>a1146a44-a884-4447-ba00-adb3f2027d8c</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>095ccb5e-5ee8-405b-a0b5-f3ae10a24a85</Guid>
          <Name>Illegal execution of &lt;delete&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; D &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>281e3858-98cc-4758-94ad-9dda51df0373</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>437c5397-5da7-4f73-ae17-4e279de58cbf</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a6a8b9b3-4c2c-4615-99a8-a7b60253e374</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>49bdce6f-554e-4843-ae78-62ca25ce8bde</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e595193c-7c0e-4a2b-afd6-43dd9f63ed61</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f89306a1-4332-4b89-99c1-2bfdc1a683b9</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>eb8c0890-dbab-48df-979d-c37b09054dee</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>94c0eace-c6ed-4445-84c6-e7ea7c324a3b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>ab48523f-0df5-4a87-a214-82ba884edab8</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>81e2acf5-c924-4308-87a1-031b534bdcae</Guid>
          <Name>Illegal execution of &lt;create&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; C &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>c1614c8e-2d4e-4556-91c4-e21e9c610f2d</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>47c039f1-b13a-4206-9e73-b035a6f6d38e</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>67980e25-1546-485e-be6d-412b7149fcfb</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>625ab059-9d9d-4deb-8e6a-668f855fce11</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a02390fe-25d2-428e-a037-d9b13fad2946</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1f204de8-c24b-4b8c-b886-4e1bfef4fd88</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e84793c2-6bb0-4518-aa7b-8932167de4bb</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>562a9dc1-aca0-48ab-a205-3a7d926eee09</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d40257cd-dd66-40f2-bbf6-ba7c4be1fced</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f72a762b-594e-411e-aefe-b6ba38e4935f</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>c4aaabc3-9022-4410-b689-188aad500d2e</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>e3f52dda-0f3c-42c4-9f87-a5f0e632b348</Guid>
          <Name>Illegal execution of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>aa914427-3e28-4954-a282-ea1cbff8ff4a</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>25392db9-5ae4-4974-80c0-906cd6f64e70</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5172e551-1117-4b6e-95d8-def2b13e360f</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>40c6005c-44d9-4423-8280-c2d8b329e08b</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>68545659-da9e-4a7e-bba4-908642de1680</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9bbf48f2-03ae-4850-9cce-cc07000814c8</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>76efc10f-ca6c-47ff-92ce-e1d5aea45c64</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>87f0314f-5ee9-483d-ba9e-0bb455830267</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2d581b76-4860-4c45-82e2-7a26eea31c94</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>62729ee4-42f6-4619-a323-0042f90773d2</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>243fcfb8-7258-4d2c-a8d5-24a6109fdc6e</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>be622400-5a36-461c-b49d-c367acc24fca</Guid>
          <Name>Illegal execution of &lt;update&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; U &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>522e63f6-062f-462d-9481-ab79b33a506b</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0f1005ef-a7bc-43d0-8388-b24ea2f2a4fc</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f1a07549-c3fb-49ca-81fd-c4510aaced92</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>169eae80-c55a-47a2-8c44-4d77403307b3</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e2127810-f96d-4a6f-ab5f-f4f44ecdc8e0</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ab8634ff-5742-4946-a0e3-b752f23f6eb1</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cdce892d-f38c-468f-a95a-72f15e01e07b</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>3ea2d500-41ff-49cd-9878-7f57d89a81ec</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d1e893c5-59e3-4e20-b6e7-c80bd9d7a8a2</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>00d231b9-df2a-4383-9b17-ed70159b8f2f</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>d34ee77d-587b-4657-84e8-0baf4c4ab1c4</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>5450ed96-2cc2-4797-8c63-3a40df100a7b</Guid>
          <Name>Illegal execution of &lt;delete&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; D &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>dee6931d-bb59-401c-b628-ad66774b6da6</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>b181b402-1325-4333-ae80-e5b548b60a4b</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>684d6933-8eaa-4b03-8cf1-18eca1dbbf07</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8d3ca09a-03a9-4053-b31a-1333e8664bc5</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a0f5e3be-e6d6-49ff-b6d1-77bf7862a711</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>81dc0f6e-3832-4c98-8e66-3766df1d542b</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cb1c796b-4095-4267-bb91-a769b80ee647</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9809bf2c-c8e0-4e63-a9b7-215e73e9390a</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a198558f-a48a-48f2-8830-4580352e24fe</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8c039898-78a5-41dc-ac27-004747df9996</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>b5839925-a51b-414d-b0a8-eec706afaf16</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>d3dda403-6a0b-4e7a-ae2a-fcd66cfaa2ef</Guid>
          <Name>Illegal execution of &lt;read&gt; using &lt;Component 1 - Profile info&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;AUTHORIZED read update Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; R &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; R &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>174cbc90-16fc-4b0e-8d8c-24295c471b7e</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>384d8f25-ffce-4f3f-8b39-c0fb0525fc8b</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0de2917d-6986-450b-bd9c-c2c3a8f3be81</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0e3528c4-a9c7-4c75-975c-e281d832b0db</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>fe15a55d-caeb-46f8-bec1-3c530ebb8db7</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>64310b94-741a-402b-8c10-d0bc964c051e</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>7ac07d4f-6838-4ba4-96b6-ef5c27240fa2</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1dfa318e-fe9f-4255-af50-b2d3983a641b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>509def30-cd5b-4f8f-8ad1-063a916b9df2</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>8fbd3741-0a13-4309-841c-412557a80d52</Guid>
          <Name>Illegal execution of &lt;update&gt; using &lt;Component 1 - Profile info&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;AUTHORIZED read update Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; R &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; U &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>dadc3cea-6ca7-4b24-90e4-6756206eb1c1</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>6be5c4f9-7959-4f0b-944e-2fcdd37c4f8a</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>78330786-eb26-4124-9d38-baa05ac7f556</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>61ccb5b3-10db-4d67-81d6-4511973073cc</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>12de29f8-85ad-4300-a9e6-8a3ff2c8a59e</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>09be9e2f-e938-4aa2-bb7c-961d4fca0d0f</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bf6c0853-d8b2-4737-ad5e-e19ef1ec2a18</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9b8509ee-645c-4e9e-83fd-723f6f0dd441</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>b2e65ecd-23ae-463b-8f0d-30b360f48886</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>d17810e7-ddec-4352-b347-9b9962ee6530</Guid>
          <Name>Illegal execution of &lt;create&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; C &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>ad070769-eb47-4ba0-9640-f8cbd0fbfa12</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>73320cfc-5c82-4d51-816e-22f80797ca09</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>446263ce-b212-4501-acc5-f6f7b0958345</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>14c95189-10e6-4661-a9b2-e2f87cbb4d38</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>4e343a31-4145-46ab-af4a-f84db9f3c72a</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>eed98be9-1598-45d3-9cfe-22bf0d287091</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0cc2cca8-8706-4366-9130-78e38806d8c5</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8e88c0e4-f6f7-458b-9737-aaf1e8e783ca</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2454f2c9-7b43-422a-b663-c28e91604bbe</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>af811916-d417-4a84-aef1-c2dde153bf19</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>0c574af6-824f-41c0-8a97-9da3749b98b4</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>a4808c15-d890-4c62-864a-bd873ab86db7</Guid>
          <Name>Illegal execution of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>ec54d4e3-6158-4fa6-bccd-1fa89aeb8db6</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5913bd2f-a35d-46ec-8df9-5bcaec633cd9</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c854e7d2-d180-4e95-aaaf-26b0d58ccae9</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c3931455-c9cf-45e2-9b4e-3ca9f809ce11</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ed5f3080-da7b-4db5-8807-c74e252397f3</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e03ba942-37c7-45ab-8494-00e90bbf7518</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>af46c279-6846-408b-b5ac-6d10487433b2</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0afab718-7299-4c6c-b98e-dd93d93fa7cb</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1462ef76-0c37-4315-a373-c032796ac65f</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>3da233a3-e7b0-4acd-82ae-26af3da3834e</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>7b590b6e-c81d-4039-bd1b-1939967e0db5</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>44a6ace7-598a-4e45-9934-fa130498d0eb</Guid>
          <Name>Illegal execution of &lt;update&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; U &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>12f1f295-6633-4257-8578-a5f9d45903dc</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>fb6d9fe7-f982-434a-9435-47a108b09223</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a0449208-e324-40ce-b9bd-10360726d727</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>633702e6-af16-49f0-afc6-629fdfa1bfe4</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9ef68fdb-5777-4dc3-bffb-a85359727b70</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>630bd9f8-3fb7-40c9-be6b-b73163d0eb41</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>71cfb959-713f-4c5a-8838-824502da84fa</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>433d56d9-28ab-4dda-a2f5-e71a896aa901</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e2ea2d9d-fc0f-4dee-8cc4-466765c6352d</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2d03e26f-6660-4467-bafd-1262ce9ddca4</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>86af7fb9-32a5-4333-8444-ed91b90e2c88</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>c86ffa3d-f3be-4c8f-9f15-a2338dc982c3</Guid>
          <Name>Illegal execution of &lt;delete&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; D &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>225e535c-0682-43a6-9f32-38194186e31b</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cfaa679e-00aa-49bc-a5be-ff81d4f7a602</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>082871f9-720b-453f-b27e-1eca85aafa45</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d3a4b3d9-f0f4-4dfa-bdea-76e8b7373bd7</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0d0c1da9-8344-4c82-b8bd-3ff005dd0b66</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>594d9d3e-7d65-47f6-96df-84dd4c33919a</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>48894d8f-0814-4c83-ae9e-628216cb889a</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>60d41a7c-976f-4cc4-bcc8-abff117720fe</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5a3767d7-1f63-410d-a3fe-f15d571e76e1</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>df79853e-bfbf-46da-bf41-01bf979676f9</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>8a5b844b-cc30-4b6e-972f-483551ef20b9</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
        <IntegrityThreat>
          <Guid>48c893d9-6c0d-47bd-b911-9a77adb0147e</Guid>
          <Name>Illegal execution of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;UNAUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;UNAUTHORIZED read Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

UNAUTHORIZED_USERS &lt; &gt; 

Details of the action:

Caller: &lt;UNAUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>b06fc230-058d-4647-8518-07fe1321b167</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>8b835fa5-d366-4f4f-94cf-8e0ce55436d8</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>dae501fe-6dbb-404c-ad1f-69b35caa08d1</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9ae5dece-4630-420c-af9d-e3b496e08445</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>13dcff36-290e-4621-a7ff-37295df1f579</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f972d7a4-94d3-4a49-8401-3e5f5c5a6d62</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8e9178a2-0c43-4440-8ec0-5b378ee9dba4</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>77620aa3-3d40-42b9-a723-d0bbb337e1c6</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>b3ede5ff-da1e-4e4e-9613-d8849fe79981</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>69b5eb0f-b8fb-4b69-9a2c-c82bf0f966f6</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bae26b86-dd0e-47f0-b02b-0ef79218e99c</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>dce948d4-2ed8-4799-b544-a62ad7a8f639</CallGuid>
          <IsAccessControlViolation>false</IsAccessControlViolation>
          <IsBusinessLogicViolation>false</IsBusinessLogicViolation>
          <IsDataIntegrityViolation>false</IsDataIntegrityViolation>
          <DefinedBusinessLogic />
        </IntegrityThreat>
      </Threats>
    </IntegrityThreats>
    <AvailabilityThreats>
      <Guid>d9af8afa-0f9e-457d-a25c-21bb40fbacd4</Guid>
      <Name>Availability Threats</Name>
      <Threats>
        <AvailabilityThreat>
          <Guid>9ba8415b-b501-4c44-bf4f-4cfd2292a087</Guid>
          <Name>Ineffective execution of &lt;create&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; C &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>e8fa3b0c-9607-4552-a6cc-d6f8d4e09f11</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>47f2fe28-ad56-44f9-91ec-fb80ed3e7bfd</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>be8a9fd3-b1b1-4992-9990-b31db8c561f7</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ee049405-d34f-4713-a063-51e99c5a6912</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c260415a-121e-4f94-a886-991c1024a0b9</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9e074c95-8a01-4361-bc2c-2877d291c583</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a17369ca-93f6-4b33-b8f5-cb673b913048</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>464621fa-fc6a-4716-8637-8f56298f025b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>08ae725f-477c-4d8b-b1d5-f7f0cb103e0d</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>ffc22f3c-711d-45a4-88d3-cc844e1e706c</Guid>
          <Name>Ineffective execution of &lt;read&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; R &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>6831bbe7-aaae-4d28-8129-a036cd5be3a9</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ec55cac6-1bc2-4596-b171-6e3bdc6c2695</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>31ca38de-2f37-4e3c-a772-b2a077f5c8e0</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c9e79186-36a3-4e76-83fd-5778577e0558</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>6a56b319-8b86-4cb2-b33d-20f8c62fd46e</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e12d2b10-ba0f-4240-b515-c066dde2f137</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c0aa6fe2-d9de-451e-bf4f-4d3512091a33</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bd48d27a-95f5-4ce0-a762-f0992058c844</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>a1146a44-a884-4447-ba00-adb3f2027d8c</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>f1aee5d8-3a69-4a13-a425-ab4dcce03a78</Guid>
          <Name>Ineffective execution of &lt;delete&gt; using &lt;Component 1 - Profile info&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;ADMIN create read delete Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C &gt; Profile Info

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; D &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>281e3858-98cc-4758-94ad-9dda51df0373</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>437c5397-5da7-4f73-ae17-4e279de58cbf</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a6a8b9b3-4c2c-4615-99a8-a7b60253e374</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>49bdce6f-554e-4843-ae78-62ca25ce8bde</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e595193c-7c0e-4a2b-afd6-43dd9f63ed61</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f89306a1-4332-4b89-99c1-2bfdc1a683b9</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>eb8c0890-dbab-48df-979d-c37b09054dee</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>94c0eace-c6ed-4445-84c6-e7ea7c324a3b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>ab48523f-0df5-4a87-a214-82ba884edab8</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>7fd16302-2288-4e9e-9cd9-e96fd2ff71da</Guid>
          <Name>Ineffective execution of &lt;create&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; C &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>c1614c8e-2d4e-4556-91c4-e21e9c610f2d</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>47c039f1-b13a-4206-9e73-b035a6f6d38e</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>67980e25-1546-485e-be6d-412b7149fcfb</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>625ab059-9d9d-4deb-8e6a-668f855fce11</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a02390fe-25d2-428e-a037-d9b13fad2946</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1f204de8-c24b-4b8c-b886-4e1bfef4fd88</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e84793c2-6bb0-4518-aa7b-8932167de4bb</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>562a9dc1-aca0-48ab-a205-3a7d926eee09</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d40257cd-dd66-40f2-bbf6-ba7c4be1fced</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f72a762b-594e-411e-aefe-b6ba38e4935f</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>c4aaabc3-9022-4410-b689-188aad500d2e</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>feaab1c3-2b3e-498a-afc4-2e20dcd214ae</Guid>
          <Name>Ineffective execution of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>aa914427-3e28-4954-a282-ea1cbff8ff4a</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>25392db9-5ae4-4974-80c0-906cd6f64e70</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5172e551-1117-4b6e-95d8-def2b13e360f</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>40c6005c-44d9-4423-8280-c2d8b329e08b</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>68545659-da9e-4a7e-bba4-908642de1680</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9bbf48f2-03ae-4850-9cce-cc07000814c8</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>76efc10f-ca6c-47ff-92ce-e1d5aea45c64</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>87f0314f-5ee9-483d-ba9e-0bb455830267</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2d581b76-4860-4c45-82e2-7a26eea31c94</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>62729ee4-42f6-4619-a323-0042f90773d2</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>243fcfb8-7258-4d2c-a8d5-24a6109fdc6e</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>087cac23-9aa4-4245-b826-3c8f5c2a5d62</Guid>
          <Name>Ineffective execution of &lt;update&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; U &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>522e63f6-062f-462d-9481-ab79b33a506b</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0f1005ef-a7bc-43d0-8388-b24ea2f2a4fc</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f1a07549-c3fb-49ca-81fd-c4510aaced92</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>169eae80-c55a-47a2-8c44-4d77403307b3</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e2127810-f96d-4a6f-ab5f-f4f44ecdc8e0</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ab8634ff-5742-4946-a0e3-b752f23f6eb1</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cdce892d-f38c-468f-a95a-72f15e01e07b</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>3ea2d500-41ff-49cd-9878-7f57d89a81ec</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d1e893c5-59e3-4e20-b6e7-c80bd9d7a8a2</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>00d231b9-df2a-4383-9b17-ed70159b8f2f</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>d34ee77d-587b-4657-84e8-0baf4c4ab1c4</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>4a6b19ff-a024-4b9b-ae14-3e0dabd8cea5</Guid>
          <Name>Ineffective execution of &lt;delete&gt; using &lt;Component 2 - Blog post&gt; by &lt;ADMIN&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;ADMIN create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

ADMIN &lt; C R U D &gt; Blog Post

Details of the action:

Caller: &lt;ADMIN&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; D &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>e6e92440-82e8-45e6-9191-3d53af2f9ffa</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>dee6931d-bb59-401c-b628-ad66774b6da6</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>b181b402-1325-4333-ae80-e5b548b60a4b</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>684d6933-8eaa-4b03-8cf1-18eca1dbbf07</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8d3ca09a-03a9-4053-b31a-1333e8664bc5</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a0f5e3be-e6d6-49ff-b6d1-77bf7862a711</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>81dc0f6e-3832-4c98-8e66-3766df1d542b</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cb1c796b-4095-4267-bb91-a769b80ee647</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9809bf2c-c8e0-4e63-a9b7-215e73e9390a</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a198558f-a48a-48f2-8830-4580352e24fe</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8c039898-78a5-41dc-ac27-004747df9996</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>b5839925-a51b-414d-b0a8-eec706afaf16</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>a266a2e2-9521-4878-a4c8-02a8a4d51047</Guid>
          <Name>Ineffective execution of &lt;read&gt; using &lt;Component 1 - Profile info&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;AUTHORIZED read update Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; R &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; R &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>174cbc90-16fc-4b0e-8d8c-24295c471b7e</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>384d8f25-ffce-4f3f-8b39-c0fb0525fc8b</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0de2917d-6986-450b-bd9c-c2c3a8f3be81</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0e3528c4-a9c7-4c75-975c-e281d832b0db</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>fe15a55d-caeb-46f8-bec1-3c530ebb8db7</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>64310b94-741a-402b-8c10-d0bc964c051e</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>7ac07d4f-6838-4ba4-96b6-ef5c27240fa2</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1dfa318e-fe9f-4255-af50-b2d3983a641b</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>509def30-cd5b-4f8f-8ad1-063a916b9df2</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>e83bf935-2446-4a7a-bbc2-d9f5632256ce</Guid>
          <Name>Ineffective execution of &lt;update&gt; using &lt;Component 1 - Profile info&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;AUTHORIZED read update Profile info&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; R &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Profile Info&gt;

Data Received: &lt;Profile Info&gt;

Component: Component 1 - Profile info

Data Effect: 
&lt; U &gt; &lt;Profile Info&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>dadc3cea-6ca7-4b24-90e4-6756206eb1c1</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>6be5c4f9-7959-4f0b-944e-2fcdd37c4f8a</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>78330786-eb26-4124-9d38-baa05ac7f556</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>61ccb5b3-10db-4d67-81d6-4511973073cc</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>12de29f8-85ad-4300-a9e6-8a3ff2c8a59e</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>09be9e2f-e938-4aa2-bb7c-961d4fca0d0f</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bf6c0853-d8b2-4737-ad5e-e19ef1ec2a18</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9b8509ee-645c-4e9e-83fd-723f6f0dd441</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>b2e65ecd-23ae-463b-8f0d-30b360f48886</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>94b7e755-45f8-46db-9167-25998533cdfd</Guid>
          <Name>Ineffective execution of &lt;create&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;create&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; C &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>ad070769-eb47-4ba0-9640-f8cbd0fbfa12</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>73320cfc-5c82-4d51-816e-22f80797ca09</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>446263ce-b212-4501-acc5-f6f7b0958345</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>14c95189-10e6-4661-a9b2-e2f87cbb4d38</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>4e343a31-4145-46ab-af4a-f84db9f3c72a</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>eed98be9-1598-45d3-9cfe-22bf0d287091</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0cc2cca8-8706-4366-9130-78e38806d8c5</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8e88c0e4-f6f7-458b-9737-aaf1e8e783ca</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2454f2c9-7b43-422a-b663-c28e91604bbe</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>af811916-d417-4a84-aef1-c2dde153bf19</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>0c574af6-824f-41c0-8a97-9da3749b98b4</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>da9cb6ad-cd86-490e-8248-e6d816e7399c</Guid>
          <Name>Ineffective execution of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>ec54d4e3-6158-4fa6-bccd-1fa89aeb8db6</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5913bd2f-a35d-46ec-8df9-5bcaec633cd9</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c854e7d2-d180-4e95-aaaf-26b0d58ccae9</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>c3931455-c9cf-45e2-9b4e-3ca9f809ce11</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>ed5f3080-da7b-4db5-8807-c74e252397f3</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e03ba942-37c7-45ab-8494-00e90bbf7518</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>af46c279-6846-408b-b5ac-6d10487433b2</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0afab718-7299-4c6c-b98e-dd93d93fa7cb</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>1462ef76-0c37-4315-a373-c032796ac65f</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>3da233a3-e7b0-4acd-82ae-26af3da3834e</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>7b590b6e-c81d-4039-bd1b-1939967e0db5</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>a33b05d8-8937-4ab0-812b-ac32d597b5f9</Guid>
          <Name>Ineffective execution of &lt;update&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;update&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; U &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>12f1f295-6633-4257-8578-a5f9d45903dc</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>fb6d9fe7-f982-434a-9435-47a108b09223</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>a0449208-e324-40ce-b9bd-10360726d727</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>633702e6-af16-49f0-afc6-629fdfa1bfe4</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9ef68fdb-5777-4dc3-bffb-a85359727b70</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>630bd9f8-3fb7-40c9-be6b-b73163d0eb41</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>71cfb959-713f-4c5a-8838-824502da84fa</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>433d56d9-28ab-4dda-a2f5-e71a896aa901</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>e2ea2d9d-fc0f-4dee-8cc4-466765c6352d</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>2d03e26f-6660-4467-bafd-1262ce9ddca4</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>86af7fb9-32a5-4333-8444-ed91b90e2c88</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>c8ee5e0c-6efc-47be-8c62-4be91260fae2</Guid>
          <Name>Ineffective execution of &lt;delete&gt; using &lt;Component 2 - Blog post&gt; by &lt;AUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;delete&gt; action supporting the &lt;AUTHORIZED create read update delete Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

AUTHORIZED_USERS &lt; U &gt; Profile Info

Details of the action:

Caller: &lt;AUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; D &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>05df594e-9e6a-496b-a211-784c5b7a1bd2</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>225e535c-0682-43a6-9f32-38194186e31b</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>cfaa679e-00aa-49bc-a5be-ff81d4f7a602</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>082871f9-720b-453f-b27e-1eca85aafa45</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>d3a4b3d9-f0f4-4dfa-bdea-76e8b7373bd7</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>0d0c1da9-8344-4c82-b8bd-3ff005dd0b66</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>594d9d3e-7d65-47f6-96df-84dd4c33919a</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>48894d8f-0814-4c83-ae9e-628216cb889a</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>60d41a7c-976f-4cc4-bcc8-abff117720fe</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>5a3767d7-1f63-410d-a3fe-f15d571e76e1</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>df79853e-bfbf-46da-bf41-01bf979676f9</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>8a5b844b-cc30-4b6e-972f-483551ef20b9</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
        <AvailabilityThreat>
          <Guid>3fc2ad8e-3f61-43c5-815d-f4823dd3dc61</Guid>
          <Name>Ineffective execution of &lt;read&gt; using &lt;Component 2 - Blog post&gt; by &lt;UNAUTHORIZED_USERS&gt;</Name>
          <Description>This is an automatically generated threat affecting the &lt;read&gt; action supporting the &lt;UNAUTHORIZED read Blog post&gt; usecase. This use case is used to realize the follow net data effect: 

UNAUTHORIZED_USERS &lt; &gt; 

Details of the action:

Caller: &lt;UNAUTHORIZED_USERS&gt; &lt;delegating&gt;

Data Sent: &lt;Blog Post&gt;

Data Received: &lt;Blog Post&gt;

Component: Component 2 - Blog post

Data Effect: 
&lt; R &gt; &lt;Blog Post&gt;</Description>
          <Justification />
          <Risk>None</Risk>
          <RiskRating>9</RiskRating>
          <Cost>0</Cost>
          <RiskParams />
          <Impact>High</Impact>
          <Probability>High</Probability>
          <RoleGuid>b06fc230-058d-4647-8518-07fe1321b167</RoleGuid>
          <Mitigations>
            <MitigationAssignment>
              <Guid>8b835fa5-d366-4f4f-94cf-8e0ce55436d8</Guid>
              <Name />
              <MitigationGuid>cb9c6443-3dad-4e7d-bbd7-3fb588e52a09</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>dae501fe-6dbb-404c-ad1f-69b35caa08d1</Guid>
              <Name />
              <MitigationGuid>7a0623e1-167a-4c9f-b770-2d7b289cd3c6</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>9ae5dece-4630-420c-af9d-e3b496e08445</Guid>
              <Name />
              <MitigationGuid>8dfd62db-cd93-4e0e-8727-0b86df344778</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>13dcff36-290e-4621-a7ff-37295df1f579</Guid>
              <Name />
              <MitigationGuid>3c01a6ed-4997-48e8-b964-bb3245bad727</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>f972d7a4-94d3-4a49-8401-3e5f5c5a6d62</Guid>
              <Name />
              <MitigationGuid>6121662b-4f9d-4922-a921-256f48cd4868</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>8e9178a2-0c43-4440-8ec0-5b378ee9dba4</Guid>
              <Name />
              <MitigationGuid>7939ea2c-0c26-4483-b238-1f44ea5b0684</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>77620aa3-3d40-42b9-a723-d0bbb337e1c6</Guid>
              <Name />
              <MitigationGuid>6fa96039-0174-4fd7-95a7-5b47514cae9f</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>b3ede5ff-da1e-4e4e-9613-d8849fe79981</Guid>
              <Name />
              <MitigationGuid>6d9f9db4-af9b-4f5a-beac-197925202f8e</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>69b5eb0f-b8fb-4b69-9a2c-c82bf0f966f6</Guid>
              <Name />
              <MitigationGuid>e30b7fe3-cfce-4296-a80d-6531880b3d0a</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
            <MitigationAssignment>
              <Guid>bae26b86-dd0e-47f0-b02b-0ef79218e99c</Guid>
              <Name />
              <MitigationGuid>d01fb160-0d2b-4b4d-867d-61fb319a5ddd</MitigationGuid>
              <IsImplemented>false</IsImplemented>
              <IsVerified>false</IsVerified>
              <Cost>0</Cost>
            </MitigationAssignment>
          </Mitigations>
          <CallGuid>dce948d4-2ed8-4799-b544-a62ad7a8f639</CallGuid>
          <IsUnavailability>false</IsUnavailability>
          <AvailabilityCondition />
          <PerformanceAcceptanceCondition />
          <IsPerformanceDegredation>false</IsPerformanceDegredation>
        </AvailabilityThreat>
      </Threats>
    </AvailabilityThreats>
  </Threats>
</ThreatModel>